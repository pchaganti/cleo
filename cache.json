{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "AWS News Blog",
      "feedUrl": "https://aws.amazon.com/blogs/aws/feed/",
      "siteUrl": "https://aws.amazon.com/blogs/aws/",
      "articles": [
        {
          "id": "e1f687c9f8d0323096db2a5d5faa8c59b4b6eab3",
          "author": "Sébastien Stormacq",
          "description": "Speed up build times on CodeBuild with test splitting across multiple parallel build environments. Read how test splitting with CodeBuild works and how to get started.",
          "link": "https://aws.amazon.com/blogs/aws/accelerating-ci-with-aws-codebuild-parallel-test-execution-now-available/",
          "publishedOn": "2025-03-27T18:14:29.000Z",
          "wordCount": 2239,
          "title": "Accelerating CI with AWS CodeBuild: Parallel test execution now available",
          "imageUrl": "https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/01/31/CodeBuild-feat-img2.png"
        },
        {
          "id": "d7aaff9fd6cc3ace262f1111bd106ce6f5fcbf35",
          "author": "Sébastien Stormacq",
          "description": "AWS Amplify Hosting now offers direct integration with AWS WAF, allowing users to apply web application firewall protection to their hosted apps through the console or infrastructure as code, eliminating the need for complex Amazon CloudFront configurations.",
          "link": "https://aws.amazon.com/blogs/aws/firewall-support-for-aws-amplify-hosted-sites/",
          "publishedOn": "2025-03-26T20:05:15.000Z",
          "wordCount": 1673,
          "title": "Firewall support for AWS Amplify hosted sites",
          "imageUrl": "https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/03/18/amplify-feat-img2.png"
        },
        {
          "id": "8ef572ee74a40fa66e5321cfb5d53c61268fb8c7",
          "author": "Prasad Rao",
          "description": "AWS is expanding its global infrastructure, now providing increased transparency about the specific geographic locations of its 114 Availability Zones across 36 regions to help customers meet regulatory requirements and make informed deployment decisions.",
          "link": "https://aws.amazon.com/blogs/aws/now-available-geography-information-for-all-aws-regions-and-availability-zones/",
          "publishedOn": "2025-03-25T19:23:46.000Z",
          "wordCount": 1270,
          "title": "Detailed geographic information for all AWS Regions and Availability Zones is now available",
          "imageUrl": "https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2025/03/21/Global-infra-logo.png"
        },
        {
          "id": "5cfe9f57ec1ec7319ee4820e8e38b07fb764d6ab",
          "author": "Betty Zheng (郑予彬)",
          "description": "As we celebrate International Women’s Day (IWD) this March, I had the privilege of attending the ‘Women in Tech’ User Group meetup in Shenzhen last weekend. I was inspired to see over 100 women in tech from different industries come together to discuss AI ethics from a female perspective. Together, we explored strategies such as […]",
          "link": "https://aws.amazon.com/blogs/aws/aws-weekly-roundup-omdia-recognition-amazon-bedrock-rag-evaluation-international-womens-day-events-and-more-march-24-2025/",
          "publishedOn": "2025-03-24T17:15:01.000Z",
          "wordCount": 2692,
          "title": "AWS Weekly Roundup: Omdia recognition, Amazon Bedrock RAG evaluation, International Women’s Day events, and more (March 24, 2025)",
          "imageUrl": "https://d2908q01vomqb2.cloudfront.net/da4b9237bacccdf19c0760cab7aec4a8359010b0/2023/08/13/AWS-WIR-default.png"
        }
      ]
    },
    {
      "title": "AWS Architecture Blog",
      "feedUrl": "https://aws.amazon.com/blogs/architecture/feed/",
      "siteUrl": "https://aws.amazon.com/blogs/architecture/",
      "articles": [
        {
          "id": "bb3f454cb2a9eac3e8c23f5da1e2dd14ec278f6e",
          "author": "Andreas Gehrig",
          "description": "In this post, we walk you step-by-step through dacadoo's journey of embracing managed services, highlighting their architectural decisions as we go.",
          "link": "https://aws.amazon.com/blogs/architecture/from-virtual-machine-to-kubernetes-to-serverless-how-dacadoo-saved-78-on-cloud-costs-and-automated-operations/",
          "publishedOn": "2025-03-26T14:59:52.000Z",
          "wordCount": 2288,
          "title": "From virtual machine to Kubernetes to serverless: How dacadoo saved 78% on cloud costs and automated operations",
          "imageUrl": "https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2025/03/04/ARCHBLOG-1090-Stage3-743x630.png"
        }
      ]
    },
    {
      "title": "The latest from GitHub's engineering team - The GitHub Blog",
      "feedUrl": "http://githubengineering.com/atom.xml",
      "siteUrl": "https://github.blog/engineering/",
      "articles": [
        {
          "id": "https://github.blog/developer-skills/career-growth/how-engineers-can-use-one-on-ones-with-their-manager-to-accelerate-career-growth/",
          "author": null,
          "description": "<p>Go beyond status updates and use these meetings to surface challenges, solve problems, and drive impact. </p>\n<p>The post <a href=\"https://github.blog/developer-skills/career-growth/how-engineers-can-use-one-on-ones-with-their-manager-to-accelerate-career-growth/\">How engineers can use one-on-ones with their manager to accelerate career growth</a> appeared first on <a href=\"https://github.blog\">The GitHub Blog</a>.</p>",
          "link": "https://github.blog/developer-skills/career-growth/how-engineers-can-use-one-on-ones-with-their-manager-to-accelerate-career-growth/",
          "publishedOn": "2025-03-27T15:31:22.000Z",
          "wordCount": 3632,
          "title": "How engineers can use one-on-ones with their manager to accelerate career growth",
          "imageUrl": "https://github.blog/wp-content/uploads/2023/12/Productivity-DarkMode-2-1.png"
        }
      ]
    },
    {
      "title": "AWS DevOps & Developer Productivity Blog",
      "feedUrl": "https://aws.amazon.com/blogs/devops/feed/",
      "siteUrl": "https://aws.amazon.com/blogs/devops/",
      "articles": [
        {
          "id": "ac085208afc2314a676a8cf5155f0743a90de649",
          "author": "Adam Keller",
          "description": "Today we’re announcing the general availability (GA) of the new Amazon Cognito Identity Pool Level 2 (L2) construct in the AWS Cloud Development Kit (AWS CDK). This construct simplifies the creation and management of identity pools, permissions, and provider integrations by providing intent-based APIs that help users securely manage their authenticated and unauthenticated (guest) users […]",
          "link": "https://aws.amazon.com/blogs/devops/announcing-the-aws-cdk-l2-construct-for-amazon-cognito-identity-pools/",
          "publishedOn": "2025-03-27T17:01:53.000Z",
          "wordCount": 1707,
          "title": "Announcing the AWS CDK L2 Construct for Amazon Cognito Identity Pools",
          "imageUrl": "https://d2908q01vomqb2.cloudfront.net/7719a1c782a1ba91c031a682a0a2f8658209adbf/2025/03/27/cognito-l2.png"
        }
      ]
    },
    {
      "title": "Containers",
      "feedUrl": "https://aws.amazon.com/blogs/containers/feed/",
      "siteUrl": "https://aws.amazon.com/blogs/containers/",
      "articles": [
        {
          "id": "5690098eb267e3dff09e60d62f4d50b7167d25a3",
          "author": "pmm",
          "description": "This post was co-authored by Henrique Santana, Container Specialist, AWS and Luis Felipe, Principal Solutions Architect, AWS. Introduction Many organizations have built their infrastructure using Amazon Elastic Compute Cloud (Amazon EC2) and Network Load Balancer (NLB), often with security policies built around the NLB’s static IP addresses. As these organizations adopt containerization and move to […]",
          "link": "https://aws.amazon.com/blogs/containers/effortless-application-modernization-migrate-to-amazon-eks-with-existing-nlb-setup/",
          "publishedOn": "2025-03-25T20:56:13.000Z",
          "wordCount": 2959,
          "title": "Effortless application modernization: migrate to Amazon EKS with existing NLB setup",
          "imageUrl": "https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2025/03/19/Featured-images-for-Containers-Blog-5-1260x630.jpg"
        }
      ]
    },
    {
      "title": "naked capitalism",
      "feedUrl": "https://www.nakedcapitalism.com/feed",
      "siteUrl": "https://www.nakedcapitalism.com",
      "articles": [
        {
          "id": "https://www.nakedcapitalism.com/?p=289799",
          "author": "Haig Hovaness",
          "description": "Our strategic daily links: auto patina, shrinking ice, Chinese SST, Cuban doctors, EU farmers, Gaza horrors, Ukraine war, student deportations, vanishing privacy, flushing fentanyl, Greenland acquisitiveness, DOGEy , moves, immigration troubles, plunging market, hilarious movie trailers, and wretched excess",
          "link": "https://www.nakedcapitalism.com/2025/03/links-3-30-2025.html",
          "publishedOn": "2025-03-30T10:55:20.000Z",
          "wordCount": 21199,
          "title": "Links 3/30/2025",
          "imageUrl": "https://www.nakedcapitalism.com/wp-content/uploads/2025/03/Fox-600.jpg"
        },
        {
          "id": "https://www.nakedcapitalism.com/?p=289825",
          "author": "Conor Gallagher",
          "description": "Washington and Ankara are getting mighty cozy as the project to encircle Iran picks up steam.",
          "link": "https://www.nakedcapitalism.com/2025/03/increasing-alignment-between-the-us-and-turkiye-means-trouble.html",
          "publishedOn": "2025-03-30T10:00:18.000Z",
          "wordCount": 5927,
          "title": "Increasing Alignment Between the US and Türkiye Means Trouble",
          "imageUrl": "https://www.nakedcapitalism.com/wp-content/uploads/2025/03/Screenshot-2025-03-29-at-6.42.38 AM-1024x795.png"
        },
        {
          "id": "https://www.nakedcapitalism.com/?p=289834",
          "author": "Conor Gallagher",
          "description": "The DOGE dismantlement/takeover of the IRS continues apace.",
          "link": "https://www.nakedcapitalism.com/2025/03/trump-and-musk-are-making-it-harder-for-the-irs-to-catch-wealthy-tax-cheats.html",
          "publishedOn": "2025-03-30T09:00:31.000Z",
          "wordCount": 3862,
          "title": "Trump and Musk Are Making It Harder for the IRS to Catch Wealthy Tax Cheats",
          "imageUrl": null
        },
        {
          "id": "https://www.nakedcapitalism.com/?p=289782",
          "author": "Yves Smith",
          "description": "Our strategic daily links: CDC hides measles warning, Gates food fail, Myanmar quake, Canada divorces US, European strategic minerals scramble, moar stealth bombers to Diego Garcia, draconian US \"minerals deal\" a ruse to end support? Trump stalled on CFPB + some law firms, DOGE scheme to kill Social Security",
          "link": "https://www.nakedcapitalism.com/2025/03/links-3-29-2025.html",
          "publishedOn": "2025-03-29T10:55:02.000Z",
          "wordCount": 19592,
          "title": "Links 3/29/2025",
          "imageUrl": "https://www.nakedcapitalism.com/wp-content/uploads/2025/03/Screen-Shot-2025-03-29-at-4.33.45-PM.png"
        },
        {
          "id": "https://www.nakedcapitalism.com/?p=289793",
          "author": "Yves Smith",
          "description": "In “Ends of the Earth,” Neil Shubin travels north and south to explore the frontiers of polar science and history.",
          "link": "https://www.nakedcapitalism.com/2025/03/book-review-the-dazzling-complexity-of-the-polar-realm.html",
          "publishedOn": "2025-03-29T10:28:10.000Z",
          "wordCount": 4155,
          "title": "Book Review: The Dazzling Complexity of the Polar Realm",
          "imageUrl": "https://www.nakedcapitalism.com/wp-content/uploads/2025/03/Screen-Shot-2025-03-29-at-5.26.51-PM.png"
        },
        {
          "id": "https://www.nakedcapitalism.com/?p=289791",
          "author": "Yves Smith",
          "description": "For growing numbers of media companies, employee ownership offers journalistic freedom and job stability.",
          "link": "https://www.nakedcapitalism.com/2025/03/how-worker-owned-news-outlets-are-changing-the-media-industry.html",
          "publishedOn": "2025-03-29T10:07:33.000Z",
          "wordCount": 5455,
          "title": "How Worker-Owned News Outlets Are Changing the Media Industry",
          "imageUrl": null
        },
        {
          "id": "https://www.nakedcapitalism.com/?p=289771",
          "author": "KLG",
          "description": "Covid and cancer are not going away soon, but if Dr. Oz has his way, Medicare might.",
          "link": "https://www.nakedcapitalism.com/2025/03/coffee-break-covid-denialism-is-not-a-cure-updates-on-the-war-on-cancer-and-medicare.html",
          "publishedOn": "2025-03-28T18:00:21.000Z",
          "wordCount": 8349,
          "title": "Coffee Break: Covid Denialism Is Not a Cure; Updates on the War on Cancer and Medicare",
          "imageUrl": null
        },
        {
          "id": "https://www.nakedcapitalism.com/?p=289758",
          "author": "Yves Smith",
          "description": "Trump's Constitution-trampling has historical predecents. Where might we be headed?",
          "link": "https://www.nakedcapitalism.com/2025/03/the-next-american-constitution.html",
          "publishedOn": "2025-03-28T14:21:56.000Z",
          "wordCount": 15751,
          "title": "The Next American Constitution",
          "imageUrl": "https://www.nakedcapitalism.com/wp-content/uploads/2025/03/00-constitution.jpeg"
        },
        {
          "id": "https://www.nakedcapitalism.com/?p=289770",
          "author": "Yves Smith",
          "description": "Staffers uing AI are putting in more hours relative to non-AI-deploying positions. So who is working for whom?",
          "link": "https://www.nakedcapitalism.com/2025/03/as-ais-power-grows-so-does-our-workday.html",
          "publishedOn": "2025-03-28T13:55:40.000Z",
          "wordCount": 7307,
          "title": "As AI’s Power Grows, So Does Our Workday",
          "imageUrl": "https://www.nakedcapitalism.com/wp-content/uploads/2025/03/00-AI.png"
        },
        {
          "id": "https://www.nakedcapitalism.com/?p=289737",
          "author": "Conor Gallagher",
          "description": "",
          "link": "https://www.nakedcapitalism.com/2025/03/links-3-28-2025.html",
          "publishedOn": "2025-03-28T10:55:12.000Z",
          "wordCount": 15724,
          "title": "Links 3/28/2025",
          "imageUrl": "https://www.nakedcapitalism.com/wp-content/uploads/2025/03/Screenshot-2025-03-27-at-5.07.37 PM-1024x1021.png"
        }
      ]
    },
    {
      "title": "The Cloudflare Blog",
      "feedUrl": "https://blog.cloudflare.com/rss",
      "siteUrl": "https://blog.cloudflare.com",
      "articles": [
        {
          "id": "4KZNfa2772az1gUrIw1zpu",
          "author": "John Graham-Cumming",
          "description": "Today, after more than 13 years at the company, I am joining Cloudflare’s board of directors and retiring from my full-time position as CTO.",
          "link": "https://blog.cloudflare.com/three-chapters-at-cloudflare-programmer-to-cto-to-board-of-directors/",
          "publishedOn": "2025-03-27T00:00:00.000Z",
          "wordCount": 1659,
          "title": "Three chapters at Cloudflare: Programmer to CTO to Board of Directors",
          "imageUrl": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1zELgm28SLbbqJkqH8CPpb/70c85b8d9b6816f68e919fd93ae65f1a/unnamed__1_.png"
        },
        {
          "id": "7vpLPW7ezoVN0nUbSRGmeJ",
          "author": "Emily Terrell",
          "description": "With Cloudflare’s victory against patent trolls Sable IP and Sable Networks in the books, it’s time to close out the case’s Project Jengo competition.",
          "link": "https://blog.cloudflare.com/project-jengo-for-sable-final-winners/",
          "publishedOn": "2025-03-26T05:00:00.000Z",
          "wordCount": 1961,
          "title": "Project Jengo for Sable — final winners!",
          "imageUrl": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3igspItrL26fBTPmQWzgDs/bc21220072332b3b3a45483d9bfbcfdd/Project_Jengo_for_Sable___final_winners_-OG.png"
        },
        {
          "id": "4e3J8mxEIN24iNKfw9ToEH",
          "author": "Brendan Irvine-Broque",
          "description": "You can now build and deploy remote MCP servers to Cloudflare, and we handle the hard parts of building remote MCP servers for you.",
          "link": "https://blog.cloudflare.com/remote-model-context-protocol-servers-mcp/",
          "publishedOn": "2025-03-25T13:59:00.000Z",
          "wordCount": 3173,
          "title": "Build and deploy Remote Model Context Protocol (MCP) servers to Cloudflare",
          "imageUrl": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/1SwF8Gu9jc5mjMgbH1r4Qs/1367a66d6d34dfb3c66a16aecad959b9/Build_and_deploy_Remote_Model_Context_Protocol__MCP__servers_to_Cloudflare_-OG.png"
        },
        {
          "id": "01zA7RtUKkhrUeINJ9AIS3",
          "author": "Ethan Heilman",
          "description": "OPKSSH (OpenPubkey SSH) is now open-sourced as part of the OpenPubkey project.",
          "link": "https://blog.cloudflare.com/open-sourcing-openpubkey-ssh-opkssh-integrating-single-sign-on-with-ssh/",
          "publishedOn": "2025-03-25T13:00:00.000Z",
          "wordCount": 2247,
          "title": "Open-sourcing OpenPubkey SSH (OPKSSH): integrating single sign-on with SSH",
          "imageUrl": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/3YFOkinUKPO3rl18jJKJnb/6fc2b6a7b4d51985155e34b6bd1f56e2/Open-sourcing_OpenPubkey_SSH__OPKSSH_-_integrating_single_sign-on_with_SSH-OG.png"
        },
        {
          "id": "4I4XNCQlRirlf9SaA9ySTS",
          "author": "Phillip Jones",
          "description": "On March 21, 2025, multiple Cloudflare services, including R2 object storage experienced an elevated rate of error responses. Here’s what caused the incident, the impact, and how we are making sure it",
          "link": "https://blog.cloudflare.com/cloudflare-incident-march-21-2025/",
          "publishedOn": "2025-03-25T01:40:38.000Z",
          "wordCount": 2597,
          "title": "Cloudflare incident on March 21, 2025",
          "imageUrl": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/4Snz5aLHm9r8iuQrJu1PFo/b08d68ab5199b08dfc096237501e8bf9/BLOG-2793_OG_Share.png"
        },
        {
          "id": "57bTt5UYhnjdF2MwuEePqb",
          "author": "Kim Blight",
          "description": "Security Week 2025 has officially come to a close. Our updates for the week included a deep dive on our AI offering, a unified navigation experience, and an introduction to our AI Agent Cloudy.",
          "link": "https://blog.cloudflare.com/security-week-2025-wrap-up/",
          "publishedOn": "2025-03-24T13:05:00.000Z",
          "wordCount": 1853,
          "title": "Security Week 2025: in review",
          "imageUrl": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/220z6OxjNRgWuFuHS4CH6Y/a43048aeddbbae965bc26bb26313da5a/Security_Week_2025-in_review-OG.png"
        },
        {
          "id": "55t98SAXi3erhs7Wn5dgno",
          "author": "Yagiz Nizipli",
          "description": "Today we're announcing our latest contribution to Node.js, now available in v23.8.0: URLPattern.",
          "link": "https://blog.cloudflare.com/improving-web-standards-urlpattern/",
          "publishedOn": "2025-03-24T13:00:00.000Z",
          "wordCount": 1691,
          "title": "New URLPattern API brings improved pattern matching to Node.js and Cloudflare Workers",
          "imageUrl": "https://cf-assets.www.cloudflare.com/zkvhlag99gkb/6bo0v1Q736CDgyXvO8SLfs/30d813354c853ea477e4507f3d54e771/New_URLPattern_API_brings_improved_pattern_matching_to_Node.js_and_Cloudflare_Workers-OG.png"
        }
      ]
    },
    {
      "title": "Visual Studio Code - Code Editing. Redefined.",
      "feedUrl": "https://code.visualstudio.com/feed.xml",
      "siteUrl": "https://code.visualstudio.com/",
      "articles": [
        {
          "id": "https://code.visualstudio.com/blogs/2025/03/26/custom-instructions",
          "author": null,
          "description": "Announcing the general availability of custom instructions for VS Code.\nRead the full article",
          "link": "https://code.visualstudio.com/blogs/2025/03/26/custom-instructions",
          "publishedOn": "2025-03-26T00:00:00.000Z",
          "wordCount": 2483,
          "title": "Context is all you need: Better AI results with custom instructions",
          "imageUrl": "https://code.visualstudio.com/opengraphimg/opengraph-blog.png"
        }
      ]
    },
    {
      "title": "theunderground.blog",
      "feedUrl": "https://theunderground.blog/feed.xml",
      "siteUrl": "https://theunderground.blog/feed.xml",
      "articles": []
    },
    {
      "title": "New Left Review Sidecar recent posts",
      "feedUrl": "https://newleftreview.org/sidecar/feed",
      "siteUrl": "https://newleftreview.org/sidecar/feed",
      "articles": [
        {
          "id": "https://newleftreview.org/sidecar/posts/mislaid-plans",
          "author": null,
          "description": "On the Manic Street Preachers.",
          "link": "https://newleftreview.org/sidecar/posts/mislaid-plans",
          "publishedOn": "2025-03-28T13:33:26.000Z",
          "wordCount": 5070,
          "title": "Owen Hatherley: &ldquo;Mislaid Plans&rdquo;",
          "imageUrl": "https://newleftreview.org/blog-uploads/2025/03/manics1.jpg"
        }
      ]
    },
    {
      "title": "The Olognion",
      "feedUrl": "https://www.theolognion.com/feed",
      "siteUrl": "https://www.theolognion.com",
      "articles": []
    },
    {
      "title": "Richard Seroter's Architecture Musings",
      "feedUrl": "https://seroter.com/feed/",
      "siteUrl": "https://seroter.com",
      "articles": [
        {
          "id": "http://seroter.com/?p=21789",
          "author": "Richard Seroter",
          "description": "Today's links look at why you should keep learning to code, the role of devs in agentic coding, and why IDPs are an important part of your developer strategy.",
          "link": "https://seroter.com/2025/03/28/daily-reading-list-march-28-2025-522/",
          "publishedOn": "2025-03-28T23:26:06.000Z",
          "wordCount": 4510,
          "title": "Daily Reading List – March 28, 2025 (#522)",
          "imageUrl": "https://s0.wp.com/i/blank.jpg"
        },
        {
          "id": "http://seroter.com/?p=21772",
          "author": "Richard Seroter",
          "description": "Today's links look at what keeps tech leaders up at night, how to serve open LLMs with one CLI call, and specific skills for doing technical writing.",
          "link": "https://seroter.com/2025/03/27/daily-reading-list-march-27-2025-521/",
          "publishedOn": "2025-03-27T23:08:36.000Z",
          "wordCount": 4568,
          "title": "Daily Reading List – March 27, 2025 (#521)",
          "imageUrl": "https://s0.wp.com/i/blank.jpg"
        },
        {
          "id": "http://seroter.com/?p=21757",
          "author": "Richard Seroter",
          "description": "Today's links look at observability 3.0, how vibe coding affects engineering managers, and how to build career resilience in uncertain times.",
          "link": "https://seroter.com/2025/03/26/daily-reading-list-march-26-2025-520/",
          "publishedOn": "2025-03-27T00:31:38.000Z",
          "wordCount": 4620,
          "title": "Daily Reading List – March 26, 2025 (#520)",
          "imageUrl": "https://s0.wp.com/i/blank.jpg"
        },
        {
          "id": "http://seroter.com/?p=21735",
          "author": "Richard Seroter",
          "description": "Today's links look at how to use LLMs to write code, what happens when you oversell your abilities, and 20 business terms that techies should know.",
          "link": "https://seroter.com/2025/03/25/daily-reading-list-march-25-2025-519/",
          "publishedOn": "2025-03-26T00:16:13.000Z",
          "wordCount": 4695,
          "title": "Daily Reading List – March 25, 2025 (#519)",
          "imageUrl": "https://s0.wp.com/i/blank.jpg"
        },
        {
          "id": "http://seroter.com/?p=21705",
          "author": "Richard Seroter",
          "description": "Today's links look at how to lead effective engineering teams in an AI world, why you should do discontinuous improvements, and how to develop a more powerful speaking voice.",
          "link": "https://seroter.com/2025/03/24/daily-reading-list-march-24-2025-518/",
          "publishedOn": "2025-03-24T21:44:08.000Z",
          "wordCount": 4610,
          "title": "Daily Reading List – March 24, 2025 (#518)",
          "imageUrl": "https://s0.wp.com/i/blank.jpg"
        },
        {
          "id": "http://seroter.com/?p=21680",
          "author": "Richard Seroter",
          "description": "It can feel like a relief to attend a single-track conference. No choices to make!…",
          "link": "https://seroter.com/2025/03/24/these-are-25-sure-bet-breakout-sessions-for-developers-at-google-cloud-next-25/",
          "publishedOn": "2025-03-24T15:35:13.000Z",
          "wordCount": 5034,
          "title": "These are 25 “sure bet” breakout sessions for developers at Google Cloud Next ’25",
          "imageUrl": "https://s0.wp.com/i/blank.jpg"
        }
      ]
    },
    {
      "title": "Simon Willison's Weblog",
      "feedUrl": "https://simonwillison.net/atom/everything/",
      "siteUrl": "http://simonwillison.net/",
      "articles": [
        {
          "id": "https://simonwillison.net/2025/Mar/28/colin-fraser/#atom-everything",
          "author": null,
          "description": "<blockquote cite=\"https://twitter.com/colin_fraser/status/1905158970337083676\"><p>Slop is about collapsing to the mode. It’s about information heat death. It’s lukewarm emptiness. It’s ten million approximately identical cartoon selfies that no one will ever recall in detail because none of the details matter.</p></blockquote>\n<p class=\"cite\">&mdash; <a href=\"https://twitter.com/colin_fraser/status/1905158970337083676\">Colin Fraser</a></p>\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/ai-ethics\">ai-ethics</a>, <a href=\"https://simonwillison.net/tags/slop\">slop</a>, <a href=\"https://simonwillison.net/tags/ai\">ai</a>, <a href=\"https://simonwillison.net/tags/generative-ai\">generative-ai</a></p>",
          "link": "https://simonwillison.net/2025/Mar/28/colin-fraser/#atom-everything",
          "publishedOn": "2025-03-28T16:15:00.000Z",
          "wordCount": 227,
          "title": "Quoting Colin Fraser",
          "imageUrl": null
        },
        {
          "id": "https://simonwillison.net/2025/Mar/28/incomplete-json-pretty-printer/#atom-everything",
          "author": null,
          "description": "<p><strong><a href=\"https://tools.simonwillison.net/incomplete-json-printer\">Incomplete JSON Pretty Printer</a></strong></p>\nEvery now and then a log file or a tool I'm using will spit out a bunch of JSON that terminates unexpectedly, meaning I can't copy it into a text editor and pretty-print it to see what's going on.</p>\n<p>The other day I got frustrated with this and had the then-new GPT-4.5 build me a pretty-printer that didn't mind incomplete JSON, using an OpenAI Canvas. Here's <a href=\"https://chatgpt.com/share/67dd9d55-7f70-8006-b55d-72730f60ddbe\">the chat</a> and here's <a href=\"https://chatgpt.com/canvas/shared/67e5e9b3f7bc8191b2306a123c9d328f\">the resulting interactive</a>.</p>\n<p>I spotted a bug with the way it indented code today so I pasted it into Claude 3.7 Sonnet Thinking mode and had it make a bunch of improvements - <a href=\"https://claude.ai/share/22dc4b58-e8c4-44a4-9650-a37d21513b8d\">full transcript here</a>. Here's the <a href=\"https://github.com/simonw/tools/blob/main/incomplete-json-printer.html\">finished code</a>.</p>\n<p><img alt=\"Animated GIF demo - as I type JSON it is pretty printed below, at the end I click the Load Pelican Example button.\" src=\"https://static.simonwillison.net/static/2025/pretty-print-json.gif\" /></p>\n<p>In many ways this is a perfect example of <a href=\"https://simonwillison.net/2025/Mar/19/vibe-coding/\">vibe coding </a> in action. At no point did I look at a <em>single line</em> of code that either of the LLMs had written for me. I honestly don't care how this thing works: it could not be lower stakes for me, the worst a bug could do is show me poorly formatted incomplete JSON.</p>\n<p>I was vaguely aware that some kind of state machine style parser would be needed, because you can't parse incomplete JSON with a regular JSON parser. Building simple parsers is the kind of thing LLMs are surprisingly good at, and also the kind of thing I don't want to take on for a trivial project.</p>\n<p>At one point I told Claude \"Try using your code execution tool to check your logic\", because I happen to know Claude can write and then execute JavaScript independently of using it for artifacts. That helped it out a bunch.</p>\n<p>I later dropped in the following:</p>\n<blockquote>\n<p><code>modify the tool to work better on mobile screens and generally look a bit nicer - and remove the pretty print JSON button, it should update any time the input text is changed. Also add a \"copy to clipboard\" button next to the results. And add a button that says \"example\" which adds a longer incomplete example to demonstrate the tool, make that example pelican themed.</code></p>\n</blockquote>\n<p>It's fun being able to say \"generally look a bit nicer\" and get a perfectly acceptable result!\n\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/chatgpt\">chatgpt</a>, <a href=\"https://simonwillison.net/tags/claude\">claude</a>, <a href=\"https://simonwillison.net/tags/tools\">tools</a>, <a href=\"https://simonwillison.net/tags/json\">json</a>, <a href=\"https://simonwillison.net/tags/generative-ai\">generative-ai</a>, <a href=\"https://simonwillison.net/tags/ai\">ai</a>, <a href=\"https://simonwillison.net/tags/llms\">llms</a>, <a href=\"https://simonwillison.net/tags/vibe-coding\">vibe-coding</a></p>",
          "link": "https://simonwillison.net/2025/Mar/28/incomplete-json-pretty-printer/#atom-everything",
          "publishedOn": "2025-03-28T00:18:43.000Z",
          "wordCount": 556,
          "title": "Incomplete JSON Pretty Printer",
          "imageUrl": "https://static.simonwillison.net/static/2025/pretty-print-json.gif"
        },
        {
          "id": "https://simonwillison.net/2025/Mar/28/nelson-minar/#atom-everything",
          "author": null,
          "description": "<blockquote cite=\"https://lobste.rs/s/aygeaq/atom_vs_rss_2013#c_mxxurc\"><p>I was there at the first Atom meeting at the Google offices. We meant so well! And I think the basic publishing spec is good, certainly better technically than the pastiche of different things called RSS.</p>\n<p>Alas, a bunch of things then went wrong. Feeds started losing market share. Facebook started doing something useful and interesting that ultimately replaced blog feeds in open formats. The Atom vs RSS spec was at best irrelevant to most people (even programmers) and at worst a confusing market-damaging thing. The XML namespaces in Atom made everyone annoyed. Also there was some confusing “Atom API” for publishing that diluted Atom’s mindshare for feeds.</p></blockquote>\n<p class=\"cite\">&mdash; <a href=\"https://lobste.rs/s/aygeaq/atom_vs_rss_2013#c_mxxurc\">Nelson Minar</a>, Comment on lobste.rs</p>\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/atom\">atom</a>, <a href=\"https://simonwillison.net/tags/syndication\">syndication</a>, <a href=\"https://simonwillison.net/tags/nelson-minar\">nelson-minar</a>, <a href=\"https://simonwillison.net/tags/rss\">rss</a></p>",
          "link": "https://simonwillison.net/2025/Mar/28/nelson-minar/#atom-everything",
          "publishedOn": "2025-03-28T00:08:01.000Z",
          "wordCount": 302,
          "title": "Quoting Nelson Minar",
          "imageUrl": null
        },
        {
          "id": "https://simonwillison.net/2025/Mar/27/tracing-the-thoughts-of-a-large-language-model/#atom-everything",
          "author": null,
          "description": "<p><strong><a href=\"https://www.anthropic.com/research/tracing-thoughts-language-model\">Tracing the thoughts of a large language model</a></strong></p>\nIn a follow-up to the research that brought us the <a href=\"https://simonwillison.net/2024/May/24/golden-gate-claude/\">delightful Golden Gate Claude</a> last year, Anthropic have published two new papers about LLM interpretability:</p>\n<ul>\n<li><a href=\"https://transformer-circuits.pub/2025/attribution-graphs/methods.html\">Circuit Tracing: Revealing Computational Graphs in Language Models </a> extends last year's interpretable features into <a href=\"https://transformer-circuits.pub/2025/attribution-graphs/methods.html#graphs\">attribution graphs</a>, which can \"trace the chain of intermediate steps that a model uses to transform a specific input prompt into an output response\".</li>\n<li><a href=\"https://transformer-circuits.pub/2025/attribution-graphs/biology.html\">On the Biology of a Large Language Model</a> uses that methodology to investigate Claude 3.5 Haiku in a bunch of different ways. <a href=\"https://transformer-circuits.pub/2025/attribution-graphs/biology.html#dives-multilingual\">Multilingual Circuits</a> for example shows that the same prompt in three different languages uses similar circuits for each one, hinting at an intriguing level of generalization.</li>\n</ul>\n<p>To my own personal delight, neither of these papers are published as PDFs. They're both presented as glorious mobile friendly HTML pages with linkable sections and even some inline interactive diagrams. More of this please!</p>\n<p><a href=\"https://transformer-circuits.pub/2025/attribution-graphs/biology.html#dives-multilingual\"><img alt=\"Screenshot of a multilingual language model visualization showing antonym prediction across three languages. Left panel shows English with prompt &quot;The opposite of 'small' is'&quot; predicting &quot;large&quot;. Middle panel shows Chinese prompt &quot;小&quot;的反义词是&quot; predicting &quot;大 (zh: big)&quot;. Right panel shows French prompt &quot;Le contraire de &quot;petit&quot; est&quot; predicting &quot;grand (fr: big)&quot;. Above shows activation analysis with token predictions and highlighted instances of &quot;contraire&quot; in French text.\" src=\"https://static.simonwillison.net/static/2025/anthropic-diagrams.jpg\" /></a>\n\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/anthropic\">anthropic</a>, <a href=\"https://simonwillison.net/tags/claude\">claude</a>, <a href=\"https://simonwillison.net/tags/pdf\">pdf</a>, <a href=\"https://simonwillison.net/tags/generative-ai\">generative-ai</a>, <a href=\"https://simonwillison.net/tags/ai\">ai</a>, <a href=\"https://simonwillison.net/tags/llms\">llms</a>, <a href=\"https://simonwillison.net/tags/interpretability\">interpretability</a></p>",
          "link": "https://simonwillison.net/2025/Mar/27/tracing-the-thoughts-of-a-large-language-model/#atom-everything",
          "publishedOn": "2025-03-27T21:51:24.000Z",
          "wordCount": 351,
          "title": "Tracing the thoughts of a large language model",
          "imageUrl": null
        },
        {
          "id": "https://simonwillison.net/2025/Mar/27/gpt-4o-update/#atom-everything",
          "author": null,
          "description": "<p><strong><a href=\"https://twitter.com/OpenAI/status/1905331956856050135\">GPT-4o got another update in ChatGPT</a></strong></p>\nThis is a somewhat frustrating way to announce a new model. @OpenAI on Twitter just now:</p>\n<blockquote>\n<p>GPT-4o got an another update in ChatGPT!</p>\n<p>What's different?</p>\n<ul>\n<li>Better at following detailed instructions, especially prompts containing multiple requests</li>\n<li>Improved capability to tackle complex technical and coding problems</li>\n<li>Improved intuition and creativity</li>\n<li>Fewer emojis 🙃</li>\n</ul>\n</blockquote>\n<p>This sounds like a significant upgrade to GPT-4o, albeit one where the release notes are limited to a single tweet.</p>\n<p>ChatGPT-4o-latest (2025-0-26) just hit second place on <a href=\"https://lmarena.ai/?leaderboard\">the LM Arena leaderboard</a>, behind only Gemini 2.5, so this really is an update worth knowing about.</p>\n<p>The @OpenAIDevelopers account <a href=\"https://twitter.com/OpenAIDevs/status/1905335104211185999\">confirmed</a> that this is also now available in their API:</p>\n<blockquote>\n<p><code>chatgpt-4o-latest</code> is now updated in the API, but stay tuned—we plan to bring these improvements to a dated model in the API in the coming weeks.</p>\n</blockquote>\n<p>I <a href=\"https://simonwillison.net/2025/Feb/17/llm/#chatgpt-4o-latest\">wrote about chatgpt-4o-latest</a> last month - it's a model alias in the OpenAI API which provides access to the model used for ChatGPT, available since August 2024. It's priced at $5/million input and $15/million output - a step up from regular GPT-4o's $2.50/$10.</p>\n<p>I'm glad they're going to make these changes available as a dated model release - the <code>chatgpt-4o-latest</code> alias is risky to build software against due to its tendency to change without warning.</p>\n<p>A more appropriate place for this announcement would be the <a href=\"https://platform.openai.com/docs/changelog\">OpenAI Platform Changelog</a>, but that's not had an update since the release of their new audio models on March 20th.\n\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/llm-release\">llm-release</a>, <a href=\"https://simonwillison.net/tags/generative-ai\">generative-ai</a>, <a href=\"https://simonwillison.net/tags/openai\">openai</a>, <a href=\"https://simonwillison.net/tags/chatgpt\">chatgpt</a>, <a href=\"https://simonwillison.net/tags/ai\">ai</a>, <a href=\"https://simonwillison.net/tags/llms\">llms</a></p>",
          "link": "https://simonwillison.net/2025/Mar/27/gpt-4o-update/#atom-everything",
          "publishedOn": "2025-03-27T21:32:40.000Z",
          "wordCount": 439,
          "title": "GPT-4o got another update in ChatGPT",
          "imageUrl": null
        },
        {
          "id": "https://simonwillison.net/2025/Mar/27/ai-policy/#atom-everything",
          "author": null,
          "description": "<p><strong><a href=\"https://reservoirsamples.substack.com/p/thoughts-on-setting-policy-for-new\">Thoughts on setting policy for new AI capabilities</a></strong></p>\nJoanne Jang leads model behavior at OpenAI. Their release of GPT-4o image generation included some notable relaxation of OpenAI's policies concerning acceptable usage - I <a href=\"https://simonwillison.net/2025/Mar/25/introducing-4o-image-generation/\">noted some of those</a> the other day.</p>\n<p>Joanne summarizes these changes like so:</p>\n<blockquote>\n<p>tl;dr we’re shifting from blanket refusals in sensitive areas to a more precise approach focused on preventing real-world harm. The goal is to embrace humility: recognizing how much we don't know, and positioning ourselves to adapt as we learn.</p>\n</blockquote>\n<p>This point in particular resonated with me:</p>\n<blockquote>\n<ul>\n<li><strong>Trusting user creativity over our own assumptions</strong>. AI lab employees should not be the arbiters of what people should and shouldn’t be allowed to create.</li>\n</ul>\n</blockquote>\n<p>A couple of years ago when OpenAI were the only AI lab with models that were worth spending time with it really did feel that San Francisco cultural values (which I relate to myself) were being pushed on the entire world. That cultural hegemony has been broken now by the increasing pool of global organizations that can produce models, but it's still reassuring to see the leading AI lab relaxing its approach here.\n\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/ai-ethics\">ai-ethics</a>, <a href=\"https://simonwillison.net/tags/openai\">openai</a>, <a href=\"https://simonwillison.net/tags/ai\">ai</a></p>",
          "link": "https://simonwillison.net/2025/Mar/27/ai-policy/#atom-everything",
          "publishedOn": "2025-03-27T21:22:29.000Z",
          "wordCount": 379,
          "title": "Thoughts on setting policy for new AI capabilities",
          "imageUrl": null
        },
        {
          "id": "https://simonwillison.net/2025/Mar/27/nomic-embed-code/#atom-everything",
          "author": null,
          "description": "<p><strong><a href=\"https://www.nomic.ai/blog/posts/introducing-state-of-the-art-nomic-embed-code\">Nomic Embed Code: A State-of-the-Art Code Retriever</a></strong></p>\nNomic have released a new embedding model that specializes in code, based on their CoRNStack \"large-scale high-quality training dataset specifically curated for code retrieval\".</p>\n<p>The <a href=\"https://huggingface.co/nomic-ai/nomic-embed-code\">nomic-embed-code</a> model is pretty large - 26.35GB - but the announcement also mentioned a much smaller model (released 5 months ago) called <a href=\"https://huggingface.co/nomic-ai/CodeRankEmbed\">CodeRankEmbed</a> which is just 521.60MB.</p>\n<p>I missed that when it first came out, so I decided to give it a try using my <a href=\"https://github.com/simonw/llm-sentence-transformers\">llm-sentence-transformers</a> plugin for <a href=\"https://llm.datasette.io/\">LLM</a>.</p>\n<pre><code>llm install llm-sentence-transformers\nllm sentence-transformers register nomic-ai/CodeRankEmbed --trust-remote-code\n</code></pre>\n<p>Now I can run the model like this:</p>\n<pre><code>llm embed -m sentence-transformers/nomic-ai/CodeRankEmbed -c 'hello'\n</code></pre>\n<p>This outputs an array of 768 numbers, starting <code>[1.4794224500656128, -0.474479079246521, ...</code>.</p>\n<p>Where this gets fun is combining it with my <a href=\"https://simonwillison.net/2023/Jun/18/symbex/\">Symbex tool</a> to create and then search embeddings for functions in a codebase.</p>\n<p>I created an index for my LLM codebase like this:</p>\n<pre><code>cd llm\nsymbex '*' '*.*' --nl &gt; code.txt\n</code></pre>\n<p>This creates a newline-separated JSON file of all of the functions (from <code>'*'</code>) and methods (from <code>'*.*'</code>) in the current directory - you can <a href=\"https://gist.github.com/simonw/ac45c6638ea87942383e97c5cf69ae09\">see that here</a>.</p>\n<p>Then I fed that into the <a href=\"https://llm.datasette.io/en/stable/embeddings/cli.html#llm-embed-multi\">llm embed-multi</a> command like this:</p>\n<pre><code>llm embed-multi \\\n  -d code.db \\\n  -m sentence-transformers/nomic-ai/CodeRankEmbed \\\n  code code.txt \\\n  --format nl \\\n  --store \\\n  --batch-size 10\n</code></pre>\n<p>I found the <code>--batch-size</code> was needed to prevent it from crashing with an error. </p>\n<p>The above command creates a collection called <code>code</code> in a SQLite database called <code>code.db</code>.</p>\n<p>Having run this command I can search for functions that match a specific search term in that <code>code</code> collection like this:</p>\n<pre><code>llm similar code -d code.db \\\n  -c 'Represent this query for searching relevant code: install a plugin' | jq\n</code></pre>\n<p>That <code>\"Represent this query for searching relevant code: \"</code> prefix is required by the model. I pipe it through <code>jq</code> to make it a little more readable, which gives me <a href=\"https://gist.github.com/simonw/fdc1b48b20a99714200f5d3970b1dff4\">these results</a>.</p>\n<p>This <code>jq</code> recipe makes for a better output:</p>\n<pre><code>llm similar code -d code.db \\\n  -c 'Represent this query for searching relevant code: install a plugin' | \\\n  jq -r '.id + \"\\n\\n\" + .content + \"\\n--------\\n\"'\n</code></pre>\n<p>The output from that starts like so:</p>\n<pre><code>llm/cli.py:1776\n\n@cli.command(name=\"plugins\")\n@click.option(\"--all\", help=\"Include built-in default plugins\", is_flag=True)\ndef plugins_list(all):\n    \"List installed plugins\"\n    click.echo(json.dumps(get_plugins(all), indent=2))\n--------\n\nllm/cli.py:1791\n\n@cli.command()\n@click.argument(\"packages\", nargs=-1, required=False)\n@click.option(\n    \"-U\", \"--upgrade\", is_flag=True, help=\"Upgrade packages to latest version\"\n)\n...\ndef install(packages, upgrade, editable, force_reinstall, no_cache_dir):\n    \"\"\"Install packages from PyPI into the same environment as LLM\"\"\"\n</code></pre>\n<p>Getting this output was quite inconvenient, so I've <a href=\"https://github.com/simonw/llm/issues/853\">opened an issue</a>.\n\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/nomic\">nomic</a>, <a href=\"https://simonwillison.net/tags/llm\">llm</a>, <a href=\"https://simonwillison.net/tags/ai\">ai</a>, <a href=\"https://simonwillison.net/tags/embeddings\">embeddings</a>, <a href=\"https://simonwillison.net/tags/jq\">jq</a></p>",
          "link": "https://simonwillison.net/2025/Mar/27/nomic-embed-code/#atom-everything",
          "publishedOn": "2025-03-27T20:03:56.000Z",
          "wordCount": 605,
          "title": "Nomic Embed Code: A State-of-the-Art Code Retriever",
          "imageUrl": null
        },
        {
          "id": "https://simonwillison.net/2025/Mar/26/function-calling-with-gemma/#atom-everything",
          "author": null,
          "description": "<p><strong><a href=\"https://ai.google.dev/gemma/docs/capabilities/function-calling\">Function calling with Gemma</a></strong></p>\nGoogle's Gemma 3 model (the 27B variant is particularly capable, I've been trying it out <a href=\"https://ollama.com/library/gemma3\">via Ollama</a>) supports function calling exclusively through prompt engineering. The official documentation describes two recommended prompts - both of them suggest that the tool definitions are passed in as JSON schema, but the way the model should request tool executions differs.</p>\n<p>The first prompt uses Python-style function calling syntax:</p>\n<blockquote>\n<p><code>You have access to functions. If you decide to invoke any of the function(s),\n you MUST put it in the format of [func_name1(params_name1=params_value1, params_name2=params_value2...), func_name2(params)]</code></p>\n<p><code>You SHOULD NOT include any other text in the response if you call a function</code></p>\n</blockquote>\n<p>(Always love seeing CAPITALS for emphasis in prompts, makes me wonder if they proved to themselves that capitalization makes a difference in this case.)</p>\n<p>The second variant uses JSON instead:</p>\n<blockquote>\n<p><code>You have access to functions. If you decide to invoke any of the function(s),\nyou MUST put it in the format of {\"name\": function name, \"parameters\": dictionary of argument name and its value}</code></p>\n<p><code>You SHOULD NOT include any other text in the response if you call a function</code></p>\n</blockquote>\n<p>This is a neat illustration of the fact that all of these fancy tool using LLMs are still using effectively the same pattern as was described in <a href=\"https://react-lm.github.io/\">the ReAct paper</a> back in November 2022. Here's <a href=\"https://til.simonwillison.net/llms/python-react-pattern\">my implementation of that pattern</a> from March 2023.\n\n    <p><small></small>Via <a href=\"https://news.ycombinator.com/item?id=43451406\">Hacker News</a></small></p>\n\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/prompt-engineering\">prompt-engineering</a>, <a href=\"https://simonwillison.net/tags/google\">google</a>, <a href=\"https://simonwillison.net/tags/generative-ai\">generative-ai</a>, <a href=\"https://simonwillison.net/tags/llm-tool-use\">llm-tool-use</a>, <a href=\"https://simonwillison.net/tags/gemma\">gemma</a>, <a href=\"https://simonwillison.net/tags/ai\">ai</a>, <a href=\"https://simonwillison.net/tags/llms\">llms</a></p>",
          "link": "https://simonwillison.net/2025/Mar/26/function-calling-with-gemma/#atom-everything",
          "publishedOn": "2025-03-26T20:23:06.000Z",
          "wordCount": 423,
          "title": "Function calling with Gemma",
          "imageUrl": null
        },
        {
          "id": "https://simonwillison.net/2025/Mar/26/openaidevs/#atom-everything",
          "author": null,
          "description": "<blockquote cite=\"https://twitter.com/OpenAIDevs/status/1904957755829481737\"><p>MCP 🤝 OpenAI Agents SDK</p>\n<p>You can now connect your Model Context Protocol servers to Agents: <a href=\"https://openai.github.io/openai-agents-python/mcp/\">openai.github.io/openai-agents-python/mcp/</a></p>\n<p>We’re also working on MCP support for the OpenAI API and ChatGPT desktop app—we’ll share some more news in the coming months.</p></blockquote>\n<p class=\"cite\">&mdash; <a href=\"https://twitter.com/OpenAIDevs/status/1904957755829481737\">@OpenAIDevs</a></p>\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/model-context-protocol\">model-context-protocol</a>, <a href=\"https://simonwillison.net/tags/generative-ai\">generative-ai</a>, <a href=\"https://simonwillison.net/tags/ai-agents\">ai-agents</a>, <a href=\"https://simonwillison.net/tags/openai\">openai</a>, <a href=\"https://simonwillison.net/tags/llm-tool-use\">llm-tool-use</a>, <a href=\"https://simonwillison.net/tags/ai\">ai</a>, <a href=\"https://simonwillison.net/tags/llms\">llms</a></p>",
          "link": "https://simonwillison.net/2025/Mar/26/openaidevs/#atom-everything",
          "publishedOn": "2025-03-26T19:27:38.000Z",
          "wordCount": 234,
          "title": "Quoting @OpenAIDevs",
          "imageUrl": null
        },
        {
          "id": "https://simonwillison.net/2025/Mar/26/notes/#atom-everything",
          "author": null,
          "description": "<p>I've added a new content type to my blog: <strong>notes</strong>. These join my existing types: <a href=\"https://simonwillison.net/search/?type=entry\">entries</a>, <a href=\"https://simonwillison.net/search/?type=blogmark\">bookmarks</a> and <a href=\"https://simonwillison.net/search/?type=quotation\">quotations</a>.</p>\n<p>A note is a little bit like a bookmark without a link. They're for short form writing - thoughts or images that don't warrant a full entry with a title. The kind of things I used to post to Twitter, but that don't feel right to cross-post to multiple social networks (Mastodon and Bluesky, for example.)</p>\n<p>I was partly inspired by Molly White's <a href=\"https://www.mollywhite.net/micro\">short thoughts, notes, links, and musings</a>.</p>\n<p>I've been thinking about this for a while, but the amount of work involved in modifying all of the parts of my site that handle the three different content types was daunting. Then this evening I tried running my blog's source code (using <a href=\"https://github.com/simonw/files-to-prompt\">files-to-prompt</a> and <a href=\"https://llm.datasette.io/\">LLM</a>) through <a href=\"https://simonwillison.net/2025/Mar/25/gemini/\">the new Gemini 2.5 Pro</a>:</p>\n<div class=\"highlight highlight-source-shell\"><pre>files-to-prompt <span class=\"pl-c1\">.</span> -e py -c <span class=\"pl-k\">|</span> \\\n  llm -m gemini-2.5-pro-exp-03-25 -s \\\n  <span class=\"pl-s\"><span class=\"pl-pds\">'</span>I want to add a new type of content called a Note,</span>\n<span class=\"pl-s\">  similar to quotation and bookmark and entry but it</span>\n<span class=\"pl-s\">  only has a markdown text body. Output all of the</span>\n<span class=\"pl-s\">  code I need to add for that feature and tell me</span>\n<span class=\"pl-s\">  which files to add  the code to.<span class=\"pl-pds\">'</span></span></pre></div>\n\n<p>Gemini gave me <a href=\"https://gist.github.com/simonw/6d9fb3e33e7105d391a31367d6a235de#response\">a detailed 13 step plan</a> covering all of the tedious changes I'd been avoiding having to figure out!</p>\n<p>The code <a href=\"https://github.com/simonw/simonwillisonblog/pull/527\">is in this PR</a>, which touched 18 different files. The whole project took around 45 minutes start to finish.</p>\n<p>(I used Claude to <a href=\"https://claude.ai/share/17656d59-6f52-471e-8aeb-6abbe1464471\">brainstorm names</a> for the feature - I had it come up with possible nouns and then \"rank those by least pretentious to most pretentious\", and \"notes\" came out on top.)</p>\n<p>This is now far too long for a note and should really be upgraded to an entry, but I need to post a first note to make sure everything is working as it should.</p>\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/blogging\">blogging</a>, <a href=\"https://simonwillison.net/tags/projects\">projects</a>, <a href=\"https://simonwillison.net/tags/gemini\">gemini</a>, <a href=\"https://simonwillison.net/tags/ai-assisted-programming\">ai-assisted-programming</a>, <a href=\"https://simonwillison.net/tags/claude\">claude</a>, <a href=\"https://simonwillison.net/tags/molly-white\">molly-white</a></p>",
          "link": "https://simonwillison.net/2025/Mar/26/notes/#atom-everything",
          "publishedOn": "2025-03-26T06:11:30.000Z",
          "wordCount": 503,
          "title": "Note on 26th March 2025",
          "imageUrl": null
        },
        {
          "id": "https://simonwillison.net/2025/Mar/26/value-of-open-source/#atom-everything",
          "author": null,
          "description": "<blockquote cite=\"https://www.hbs.edu/faculty/Pages/item.aspx?num=65230\"><p>We estimate the supply-side value of widely-used OSS is $4.15 billion, but that the demand-side value is much larger at $8.8 trillion. We find that firms would need to spend 3.5 times more on software than they currently do if OSS did not exist.</p></blockquote>\n<p class=\"cite\">&mdash; <a href=\"https://www.hbs.edu/faculty/Pages/item.aspx?num=65230\">Manuel Hoffmann, Frank Nagle, Yanuo Zhou</a>, The Value of Open Source Software, Harvard Business School</p>\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/open-source\">open-source</a></p>",
          "link": "https://simonwillison.net/2025/Mar/26/value-of-open-source/#atom-everything",
          "publishedOn": "2025-03-26T03:49:18.000Z",
          "wordCount": 246,
          "title": "Quoting Manuel Hoffmann, Frank Nagle, Yanuo Zhou",
          "imageUrl": null
        },
        {
          "id": "https://simonwillison.net/2025/Mar/25/introducing-4o-image-generation/#atom-everything",
          "author": null,
          "description": "<p><strong><a href=\"https://openai.com/index/introducing-4o-image-generation/\">Introducing 4o Image Generation</a></strong></p>\nWhen OpenAI first announced GPT-4o <a href=\"https://simonwillison.net/2024/May/13/gpt-4o/\">back in May 2024</a> one of the most exciting features was true multi-modality in that it could both input <em>and</em>  output audio and images. The \"o\" stood for \"omni\", and the image output examples <a href=\"https://openai.com/index/hello-gpt-4o/\">in that launch post</a> looked really impressive.</p>\n<p>It's taken them over ten months (and Gemini <a href=\"https://developers.googleblog.com/en/experiment-with-gemini-20-flash-native-image-generation/\">beat them to it</a>) but today they're finally making those image generation abilities available, live right now in ChatGPT for paying customers.</p>\n<p>My test prompt for any model that can manipulate incoming images is \"Turn this into a selfie with a bear\", because you should never take a selfie with a bear! I fed ChatGPT <a href=\"https://static.simonwillison.net/static/2025/selfie.jpg\">this selfie</a> and got back this result:</p>\n<p><img alt=\"It's a selfie, there's a grizzly bear over my shoulder smiling.\" src=\"https://static.simonwillison.net/static/2025/selfie-with-a-bear.jpg\" /></p>\n<p>That's pretty great! It mangled the text on my T-Shirt (which says \"LAWRENCE.COM\" in a creative font) and added a second visible AirPod. It's very clearly me though, and that's definitely a bear.</p>\n<p>There are plenty more examples in <a href=\"https://openai.com/index/introducing-4o-image-generation/\">OpenAI's launch post</a>, but as usual the most interesting details are tucked away in <a href=\"https://openai.com/index/gpt-4o-image-generation-system-card-addendum/\">the updates to the system card</a>. There's lots in there about their approach to safety and bias, including a section on \"Ahistorical and Unrealistic Bias\" which feels inspired by Gemini's <a href=\"https://blog.google/products/gemini/gemini-image-generation-issue/\">embarrassing early missteps</a>.</p>\n<p>One section that stood out to me is their approach to images of public figures. The new policy is much more permissive than for DALL-E - highlights mine:</p>\n<blockquote>\n<p>4o image generation is capable, in many instances, of generating a depiction of a public figure based solely on a text prompt.</p>\n<p><strong>At launch, we are not blocking the capability to generate adult public figures</strong> but are instead implementing the same safeguards that we have implemented for editing images of photorealistic uploads of people. For instance, this includes seeking to block the generation of photorealistic images of public figures who are minors and of material that violates our policies related to violence, hateful imagery, instructions for illicit activities, erotic content, and other areas. <strong>Public figures who wish for their depiction not to be generated can opt out</strong>.</p>\n<p>This approach is more fine-grained than the way we dealt with public figures in our DALL·E series of models, where we used technical mitigations intended to prevent any images of a public figure from being generated. <strong>This change opens the possibility of helpful and beneficial uses in areas like educational, historical, satirical and political speech</strong>. After launch, we will continue to monitor usage of this capability, evaluating our policies, and will adjust them if needed.</p>\n</blockquote>\n<p>Given that \"public figures who wish for their depiction not to be generated can opt out\" I wonder if we'll see a stampede of public figures to do exactly that!</p>\n<p><strong>Update</strong>: There's significant confusion right now over this new feature because it is being rolled out gradually but older ChatGPT can still generate images using DALL-E instead... and there is no visual indication in the ChatGPT UI explaining which image generation method it used!</p>\n<p>OpenAI made the same mistake last year <a href=\"https://simonwillison.net/2024/May/15/chatgpt-in-4o-mode/\">when they announced ChatGPT advanced voice mode</a> but failed to clarify that ChatGPT was still running the previous, less impressive voice implementation.</p>\n<p><strong>Update 2</strong>: Images created with DALL-E through the ChatGPT web interface now show a note with a warning:</p>\n<p><img alt=\"Created with DALL-E with an information icon. Clicking it reveals DALL-E is OpenAI's legacy image generation model. A new model is rolling out in ChatGPT soon.\" src=\"https://static.simonwillison.net/static/2025/dall-e-warning.jpg\" />\n\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/openai\">openai</a>, <a href=\"https://simonwillison.net/tags/ai\">ai</a>, <a href=\"https://simonwillison.net/tags/multi-modal-output\">multi-modal-output</a>, <a href=\"https://simonwillison.net/tags/llms\">llms</a>, <a href=\"https://simonwillison.net/tags/ai-ethics\">ai-ethics</a>, <a href=\"https://simonwillison.net/tags/llm-release\">llm-release</a>, <a href=\"https://simonwillison.net/tags/generative-ai\">generative-ai</a>, <a href=\"https://simonwillison.net/tags/chatgpt\">chatgpt</a>, <a href=\"https://simonwillison.net/tags/dalle\">dalle</a>, <a href=\"https://simonwillison.net/tags/gemini\">gemini</a></p>",
          "link": "https://simonwillison.net/2025/Mar/25/introducing-4o-image-generation/#atom-everything",
          "publishedOn": "2025-03-25T21:11:23.000Z",
          "wordCount": 736,
          "title": "Introducing 4o Image Generation",
          "imageUrl": "https://static.simonwillison.net/static/2025/selfie-with-a-bear.jpg"
        },
        {
          "id": "https://simonwillison.net/2025/Mar/25/gemini/#atom-everything",
          "author": null,
          "description": "<p>There's a new release from Google Gemini this morning: <a href=\"https://blog.google/technology/google-deepmind/gemini-model-thinking-updates-march-2025/#gemini-2-5-thinking\">the first in the Gemini 2.5</a> series. Google call it \"a thinking model, designed to tackle increasingly complex problems\". It's already sat at the top of the <a href=\"https://lmarena.ai/?leaderboard\">LM Arena leaderboard</a>, and from initial impressions looks like it may deserve that top spot.</p>\r\n<p>I just released <a href=\"https://github.com/simonw/llm-gemini/releases/tag/0.16\">llm-gemini 0.16</a> adding support for the new model to my <a href=\"https://llm.datasette.io/\">LLM</a> command-line tool. Let's try it out.</p>\r\n\r\n<ul>\r\n  <li><a href=\"https://simonwillison.net/2025/Mar/25/gemini/#the-pelican-riding-a-bicycle\">The pelican riding a bicycle</a></li>\r\n  <li><a href=\"https://simonwillison.net/2025/Mar/25/gemini/#transcribing-audio\">Transcribing audio</a></li>\r\n  <li><a href=\"https://simonwillison.net/2025/Mar/25/gemini/#bounding-boxes\">Bounding boxes</a></li>\r\n  <li><a href=\"https://simonwillison.net/2025/Mar/25/gemini/#characteristics\">More characteristics of the model</a></li>\r\n  <li><a href=\"https://simonwillison.net/2025/Mar/25/gemini/#gemini-2-5-pro-is-a-very-strong-new-model\">Gemini 2.5 Pro is a very strong new model</a></li>\r\n  <li><a href=\"https://simonwillison.net/2025/Mar/25/gemini/#update-it-s-very-good-at-code\">Update: it's very good at code</a></li>\r\n</ul>\r\n\r\n<h4 id=\"the-pelican-riding-a-bicycle\">The pelican riding a bicycle</h4>\r\n<p>First up, my classic <a href=\"https://simonwillison.net/tags/pelican-riding-a-bicycle/\">generate an SVG of a pelican riding a bicycle</a> prompt.</p>\r\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> Upgrade the plugin</span>\r\nllm install -U llm-gemini\r\n\r\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Now run the prompt:</span>\r\nllm -m gemini-2.5-pro-exp-03-25 <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Generate an SVG of a pelican riding a bicycle<span class=\"pl-pds\">\"</span></span></pre></div>\r\n<p>It's pretty solid!</p>\r\n<p><img src=\"https://static.simonwillison.net/static/2025/gemini-2.5-pro-pelican.jpg\" alt=\"The pelican is perched at an angle which suggests an effort at having it make contact with the pedals. It has a good large beak.\" style=\"max-width: 100%;\" /></p>\r\n<p>Here's <a href=\"https://gist.github.com/simonw/c34f7f0c94afcbeab77e170511f6f51f\">the full transcript</a>.</p>\r\n<p>This task is meant to be almost impossible: pelicans are the wrong shape to ride bicycles! Given that, I think this is a good attempt - I like it slightly better than my previous favourite <a href=\"https://simonwillison.net/2025/Feb/24/claude-37-sonnet-and-claude-code/\">Claude 3.7 Sonnet</a>, which produced this a month ago:</p>\r\n<p><img src=\"https://static.simonwillison.net/static/2025/pelican-claude-3.7-sonnet.svg\" alt=\"The bicycle has pokes but the pedal is in the wrong place, and the pelican perches uncomfortably on the seat with weird looking wings.\" style=\"max-width: 100%;\" /></p>\r\n<h4 id=\"transcribing-audio\">Transcribing audio</h4>\r\n<p>I had <a href=\"https://static.simonwillison.net/static/2025/russian-pelican-in-spanish.mp3\">an MP3</a> lying around from <a href=\"https://simonwillison.net/2024/Oct/26/russian-spanish-pelican/\">a previous experiment</a> which mixes English and Spanish. I tried running it with the prompt <code>transcribe</code> to see what would happen:</p>\r\n<div class=\"highlight highlight-source-shell\"><pre>llm -m gemini-2.5-pro-exp-03-25 <span class=\"pl-s\"><span class=\"pl-pds\">'</span>transcribe<span class=\"pl-pds\">'</span></span> \\\r\n  -a https://static.simonwillison.net/static/2025/russian-pelican-in-spanish.mp3</pre></div>\r\n<p>I got back this, with timestamps interspersed with the text:</p>\r\n<blockquote>\r\n<p>I need you [ 0m0s450ms ] to pretend [ 0m0s880ms ] to be [ 0m0s990ms ] a California [ 0m1s560ms ] brown [ 0m1s850ms ] pelican [ 0m2s320ms ] with [ 0m2s480ms ] a very [ 0m2s990ms ] thick [ 0m3s290ms ] Russian [ 0m3s710ms ] accent, [ 0m4s110ms ] but [ 0m4s540ms ] you [ 0m4s640ms ] talk [ 0m4s830ms ] to me [ 0m4s960ms ] exclusively [ 0m5s660ms ] in Spanish. [ 0m6s200ms ] Oye, [ 0m8s930ms ] camarada, [ 0m9s570ms ] aquí [ 0m10s240ms ] está [ 0m10s590ms ] tu [ 0m10s740ms ] pelícano [ 0m11s370ms ] californiano [ 0m12s320ms ] con [ 0m12s520ms ] acento [ 0m13s100ms ] ruso. [ 0m13s540ms ] Qué [ 0m14s230ms ] tal, [ 0m14s570ms ] tovarisch? [ 0m15s210ms ] Listo [ 0m15s960ms ] para [ 0m16s190ms ] charlar [ 0m16s640ms ] en [ 0m16s750ms ] español? [ 0m17s250ms ] How's [ 0m19s834ms ] your [ 0m19s944ms ] day [ 0m20s134ms ] today? [ 0m20s414ms ] Mi [ 0m22s654ms ] día [ 0m22s934ms ] ha [ 0m23s4ms ] sido [ 0m23s464ms ] volando [ 0m24s204ms ] sobre [ 0m24s594ms ] las [ 0m24s844ms ] olas, [ 0m25s334ms ] buscando [ 0m26s264ms ] peces [ 0m26s954ms ] y [ 0m27s84ms ] disfrutando [ 0m28s14ms ] del [ 0m28s244ms ] sol [ 0m28s664ms ] californiano. [ 0m29s444ms ] Y [ 0m30s314ms ] tú, [ 0m30s614ms ] amigo, ¿ [ 0m31s354ms ] cómo [ 0m31s634ms ] ha [ 0m31s664ms ] estado [ 0m31s984ms ] tu [ 0m32s134ms ] día? [ 0m32s424ms ]</p>\r\n</blockquote>\r\n<p>This inspired me to try again, this time including <a href=\"https://simonwillison.net/2025/Feb/28/llm-schemas/\">a JSON schema</a> (using LLM's custom schema DSL):</p>\r\n<div class=\"highlight highlight-source-shell\"><pre>llm -m gemini-2.5-pro-exp-03-25 <span class=\"pl-s\"><span class=\"pl-pds\">'</span>transcribe<span class=\"pl-pds\">'</span></span> \\\r\n  -a https://static.simonwillison.net/static/2025/russian-pelican-in-spanish.mp3 \\\r\n  --schema-multi <span class=\"pl-s\"><span class=\"pl-pds\">'</span>timestamp str: mm:ss,text, language: two letter code<span class=\"pl-pds\">'</span></span></pre></div>\r\n<p>I got an <em>excellent</em> response from that:</p>\r\n<div class=\"highlight highlight-source-json\"><pre>{\r\n  <span class=\"pl-ent\">\"items\"</span>: [\r\n    {\r\n      <span class=\"pl-ent\">\"language\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>en<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"text\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I need you to pretend to be a California brown pelican with a very thick Russian accent, but you talk to me exclusively in Spanish.<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"timestamp\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>00:00<span class=\"pl-pds\">\"</span></span>\r\n    },\r\n    {\r\n      <span class=\"pl-ent\">\"language\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>es<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"text\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Oye, camarada. Aquí está tu pelícano californiano con acento ruso.<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"timestamp\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>00:08<span class=\"pl-pds\">\"</span></span>\r\n    },\r\n    {\r\n      <span class=\"pl-ent\">\"language\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>es<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"text\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>¿Qué tal, Tovarish? ¿Listo para charlar en español?<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"timestamp\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>00:13<span class=\"pl-pds\">\"</span></span>\r\n    },\r\n    {\r\n      <span class=\"pl-ent\">\"language\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>en<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"text\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>How's your day today?<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"timestamp\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>00:19<span class=\"pl-pds\">\"</span></span>\r\n    },\r\n    {\r\n      <span class=\"pl-ent\">\"language\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>es<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"text\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Mi día ha sido volando sobre las olas, buscando peces y disfrutando del sol californiano.<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"timestamp\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>00:22<span class=\"pl-pds\">\"</span></span>\r\n    },\r\n    {\r\n      <span class=\"pl-ent\">\"language\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>es<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"text\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>¿Y tú, amigo, cómo ha estado tu día?<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"timestamp\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>00:30<span class=\"pl-pds\">\"</span></span>\r\n    }\r\n  ]\r\n}</pre></div>\r\n<p>I confirmed that the timestamps match the audio. This is fantastic.</p>\r\n<p>Let's try that against a ten minute snippet of <a href=\"https://realpython.com/podcasts/rpp/236/\">a podcast episode</a> I was on:</p>\r\n<div class=\"highlight highlight-source-shell\"><pre>llm -m gemini-2.5-pro-exp-03-25 \\\r\n  <span class=\"pl-s\"><span class=\"pl-pds\">'</span>transcribe, first speaker is Christopher, second is Simon<span class=\"pl-pds\">'</span></span> \\\r\n  -a ten-minutes-of-podcast.mp3 \\\r\n  --schema-multi <span class=\"pl-s\"><span class=\"pl-pds\">'</span>timestamp str: mm:ss, text, speaker_name<span class=\"pl-pds\">'</span></span></pre></div>\r\n<p>Useful LLM trick: you can use <code>llm logs -c --data</code> to get just the JSON data from the most recent prompt response, so I ran this:</p>\r\n<div class=\"highlight highlight-source-shell\"><pre>llm logs -c --data <span class=\"pl-k\">|</span> jq</pre></div>\r\n<p>Here's <a href=\"https://gist.github.com/simonw/23d4528e23e4897e0c43458e7c46c360\">the full output JSON</a>, which starts and ends like this:</p>\r\n<div class=\"highlight highlight-source-json\"><pre>{\r\n  <span class=\"pl-ent\">\"items\"</span>: [\r\n    {\r\n      <span class=\"pl-ent\">\"speaker_name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Christopher<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"text\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>on its own and and it has this sort of like a it's like a you know old tree in the forest, you know, kind of thing that you've built, so.<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"timestamp\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>00:00<span class=\"pl-pds\">\"</span></span>\r\n    },\r\n    {\r\n      <span class=\"pl-ent\">\"speaker_name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Simon<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"text\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>There's also like I feel like with online writing, never ever like stick something online just expect people to find it. You have to So one of the great things about having a blog is I can be in a conversation about something and somebody ask a question, I can say, oh, I wrote about that two and a half years ago and give people a link.<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"timestamp\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>00:06<span class=\"pl-pds\">\"</span></span>\r\n    },\r\n\r\n    {\r\n      <span class=\"pl-ent\">\"speaker_name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Simon<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"text\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>So on that basis, Chat and I can't remember if the free version of Chat GPT has code interpreter.<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"timestamp\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>09:45<span class=\"pl-pds\">\"</span></span>\r\n    },\r\n    {\r\n      <span class=\"pl-ent\">\"speaker_name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Simon<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"text\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>I hope I think it does.<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"timestamp\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>09:50<span class=\"pl-pds\">\"</span></span>\r\n    },\r\n    {\r\n      <span class=\"pl-ent\">\"speaker_name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Christopher<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"text\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Okay. So this is like the basic paid one, maybe the $20 month because I know there's like a $200 one that's a little steep for like a basic<span class=\"pl-pds\">\"</span></span>,\r\n      <span class=\"pl-ent\">\"timestamp\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>09:51<span class=\"pl-pds\">\"</span></span>\r\n    }\r\n  ]\r\n}</pre></div>\r\n<p>A spot check of the timestamps showed them in the right place. Gemini 2.5 supports long context prompts so it's possible this works well for much longer audio files - it would be interesting to dig deeper and try that out.</p>\r\n<h4 id=\"bounding-boxes\">Bounding boxes</h4>\r\n<p>One of my favourite features of previous Gemini models is their support for bounding boxes: you can prompt them to return boxes around objects in images.</p>\r\n<p>I built a separate tool for experimenting with this feature in August last year, which I described in <a href=\"https://simonwillison.net/2024/Aug/26/gemini-bounding-box-visualization/\">Building a tool showing how Gemini Pro can return bounding boxes for objects in images</a>. I've now upgraded that tool to add support the new model.</p>\r\n<p>You can access it at <a href=\"https://tools.simonwillison.net/gemini-bbox\">tools.simonwillison.net/gemini-bbox</a> - you'll need to provide your own Gemini API key which is sent directly to their API from your browser (it won't be logged by an intermediary).</p>\r\n<p>I tried it out on <a href=\"https://static.simonwillison.net/static/2025/challenging-pelicans.jpg\">a challenging photograph</a> of some pelicans... and it worked extremely well:</p>\r\n<p>My prompt was:</p>\r\n<blockquote>\r\n<p><code>Return bounding boxes around pelicans as JSON arrays [ymin, xmin, ymax, xmax]</code></p>\r\n</blockquote>\r\n<p>The Gemini models are all trained to return bounding boxes scaled between 0 and 100. My tool knows how to convert those back to the same dimensions as the input image.</p>\r\n<p>Here's what the visualized result looked like:</p>\r\n<p><img src=\"https://static.simonwillison.net/static/2025/gemini-pelicans-bbox.jpg\" alt=\"Pelicans with bounding boxes around them\" style=\"max-width: 100%;\" /></p>\r\n<p>It got almost all of them! I like how it didn't draw a box around the one egret that had made it into the photo.</p>\r\n<h4 id=\"characteristics\">More characteristics of the model</h4>\r\n\r\n<p>Here's the <a href=\"https://ai.google.dev/gemini-api/docs/models#gemini-2.5-pro-exp-03-25\">official model listing</a> in the Gemini docs. Key details:</p>\r\n<ul>\r\n  <li>Input token limit: 1,000,000</li>\r\n  <li>Output token limit: 64,000 - this is a <em>huge</em> upgrade, all of the other listed models have 8,192 for this (correction: <a href=\"https://deepmind.google/technologies/gemini/flash-thinking/\">Gemini 2.0 Flash Thinking</a> also had a 64,000 output length)</li>\r\n  <li>Knowledge cut-off: January 2025 - an improvement on Gemini 2.0's August 2024</li>\r\n</ul>\r\n\r\n<h4 id=\"gemini-2-5-pro-is-a-very-strong-new-model\">Gemini 2.5 Pro is a very strong new model</h4>\r\n<p>I've hardly scratched the surface when it comes to trying out Gemini 2.5 Pro so far. How's its creative writing? Factual knowledge about the world? Can it write great code in Python, JavaScript, Rust and more?</p>\r\n<p>The Gemini family of models have capabilities that set them apart from other models:</p>\r\n<ul>\r\n<li>Long context length - Gemini 2.5 Pro supports up to 1 million tokens</li>\r\n<li>Audio input - something which few other models support, certainly not at this length and with this level of timestamp accuracy</li>\r\n<li>Accurate bounding box detection for image inputs</li>\r\n</ul>\r\n<p>My experiments so far with these capabilities indicate that Gemini 2.5 Pro really is a very strong new model. I'm looking forward to exploring more of what it can do.</p>\r\n\r\n<h4 id=\"update-it-s-very-good-at-code\">Update: it's very good at code</h4>\r\n<p>I spent this evening trying it out for coding tasks, and it's very, very impressive. I'm seeing results for Python that feel comparable to my previous favourite Claude 3.7 Sonnet, and appear to be benefitting from Gemini 2.5 Pro's default reasoning mode and long context.</p>\r\n<p>I've been wanting to add a new content type of \"notes\" to my blog for quite a while now, but I was put off by the anticipated tedium of all of the different places in the codebase that would need to be updated.</p>\r\n<p>That feature is now live. <a href=\"https://simonwillison.net/2025/Mar/26/notes/\">Here are my notes</a> on creating that notes feature using Gemini 2.5 Pro. It crunched through my entire codebase and figured out all of the places I needed to change - 18 files in total, as you can see in <a href=\"https://github.com/simonw/simonwillisonblog/pull/527/files\">the resulting PR</a>. The whole project took about 45 minutes from start to finish - averaging less than three minutes per file I had to modify.</p>\r\n<p>I've thrown a whole bunch of other coding challenges at it, and the bottleneck on evaluating them has become my own mental capacity to review the resulting code!</p>\r\n<p>Here's another, more complex example. This hasn't resulted in actual running code yet but it took a big bite out of an architectural design problem I've been stewing on for a very long time.</p>\r\n\r\n<p>My <a href=\"https://llm.datasette.io/\">LLM project</a> needs support for tools - a way to teach different LLMs how to request tool execution, then have those tools (implemented in Python) run and return their results back to the models.</p>\r\n\r\n<p>Designing this is really hard, because I need to create an abstraction that works across multiple different model providers, each powered by a different plugin.</p>\r\n\r\n<p>Could Gemini 2.5 Pro help unblock me by proposing an architectural approach that might work?</p>\r\n\r\n<p>I started by combining the Python and Markdown files for my <a href=\"https://github.com/simonw/sqlite-utils\">sqlite-utils</a>, <a href=\"https://github.com/simonw/llm\">llm</a>, <a href=\"https://github.com/simonw/llm-gemini\">llm-gemini</a>, and <a href=\"https://github.com/simonw/llm-anthropic\">llm-anthropic</a> repositories into one big document:</p>\r\n<div class=\"highlight highlight-source-shell\"><pre>files-to-prompt sqlite-utils llm llm-gemini llm-anthropic -e md -e py -c</pre></div>\r\n<p>Piping it through <a href=\"https://github.com/simonw/ttok\">ttok</a> showed that to be 316,098 tokens (using the OpenAI tokenizer, but the Gemini tokenizer is likely a similar number).</p>\r\n<p>Then I fed that all into Gemini 2.5 Pro with the following prompt:</p>\r\n<blockquote>\r\n<p>Provide a detailed design proposal for adding tool calling support to LLM</p>\r\n<p>Different model plugins will have different ways of executing tools, but LLM itself should provide both a Python and a CLI abstraction over these differences.</p>\r\n<p>Tool calling involves passing tool definitions to a model, the model then replies with tools it would like executed, the harness code then executes those and passes the result back to the model and continues in a loop until the model stops requesting tools. This should happen as part of the existing llm.Conversation mechanism.</p>\r\n<p>At the Python layer tools should be provided as Python functions that use type hints, which can then be converted into JSON schema using Pydantic - similar to how the existing schema= mechanism works.</p>\r\n<p>For the CLI option tools will be provided as an option passed to the command, similar to how the sqlite-utils convert CLI mechanism works.'</p>\r\n</blockquote>\r\n<p>I've been thinking about this problem for over a year now. <a href=\"https://gist.github.com/simonw/481f46a779f20d8650b4fc5854f070c5\">Gemini 2.5 Pro's response</a> isn't exactly what I'm going to do, but it did include a flurry of genuinely useful suggestions to help me craft my final approach.</p>\r\n<p>I hadn't thought about the need for asyncio support for tool functions at all, so this idea from Gemini 2.5 Pro was very welcome:</p>\r\n<blockquote>\r\n<p>The <code>AsyncConversation.prompt()</code> method will mirror the synchronous API, accepting the <code>tools</code> parameter and handling the tool calling loop using <code>async/await</code> for tool execution if the tool functions themselves are async. If tool functions are synchronous, they will be run in a thread pool executor via <code>asyncio.to_thread</code>.</p>\r\n</blockquote>\r\n<p>Watching Gemini crunch through some of the more complex problems I've been dragging my heels on reminded me of something Harper Reed wrote <a href=\"https://harper.blog/2025/02/16/my-llm-codegen-workflow-atm/\">about his   workflow with LLMs for code</a>:</p>\r\n<blockquote>\r\n<p>My hack to-do list is empty because I built everything. I keep thinking of new things and knocking them out while watching a movie or something.</p>\r\n</blockquote>\r\n<p>I've been stressing quite a bit about my backlog of incomplete projects recently. I don't think Gemini 2.5 Pro is quite going to work through all of them while I'm watching TV, but it does feel like it's going to help make a significant dent in them.</p>\n    \n        <p>Tags: <a href=\"https://simonwillison.net/tags/google\">google</a>, <a href=\"https://simonwillison.net/tags/ai\">ai</a>, <a href=\"https://simonwillison.net/tags/generative-ai\">generative-ai</a>, <a href=\"https://simonwillison.net/tags/llms\">llms</a>, <a href=\"https://simonwillison.net/tags/gemini\">gemini</a>, <a href=\"https://simonwillison.net/tags/vision-llms\">vision-llms</a>, <a href=\"https://simonwillison.net/tags/pelican-riding-a-bicycle\">pelican-riding-a-bicycle</a>, <a href=\"https://simonwillison.net/tags/llm-release\">llm-release</a></p>",
          "link": "https://simonwillison.net/2025/Mar/25/gemini/#atom-everything",
          "publishedOn": "2025-03-25T20:45:58.000Z",
          "wordCount": 2321,
          "title": "Putting Gemini 2.5 Pro through its paces",
          "imageUrl": "https://static.simonwillison.net/static/2025/gemini-pelicans-bbox.jpg"
        },
        {
          "id": "https://simonwillison.net/2025/Mar/25/greg-kamradt/#atom-everything",
          "author": null,
          "description": "<blockquote cite=\"https://arcprize.org/blog/announcing-arc-agi-2-and-arc-prize-2025\"><p>Today we’re excited to launch ARC-AGI-2 to challenge the new frontier. ARC-AGI-2 is even harder for AI (in particular, AI reasoning systems), while maintaining the same relative ease for humans. Pure LLMs score 0% on ARC-AGI-2, and public AI reasoning systems achieve only single-digit percentage scores. In contrast, every task in ARC-AGI-2 has been solved by at least 2 humans in under 2 attempts. [...]</p>\n<p>All other AI benchmarks focus on superhuman capabilities or specialized knowledge by testing \"PhD++\" skills. ARC-AGI is the only benchmark that takes the opposite design choice – by focusing on tasks that are relatively easy for humans, yet hard, or impossible, for AI, we shine a spotlight on capability gaps that do not spontaneously emerge from \"scaling up\".</p></blockquote>\n<p class=\"cite\">&mdash; <a href=\"https://arcprize.org/blog/announcing-arc-agi-2-and-arc-prize-2025\">Greg Kamradt</a>, ARC-AGI-2</p>\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/evals\">evals</a>, <a href=\"https://simonwillison.net/tags/ai\">ai</a></p>",
          "link": "https://simonwillison.net/2025/Mar/25/greg-kamradt/#atom-everything",
          "publishedOn": "2025-03-25T06:18:08.000Z",
          "wordCount": 311,
          "title": "Quoting Greg Kamradt",
          "imageUrl": null
        },
        {
          "id": "https://simonwillison.net/2025/Mar/25/shot-scraper/#atom-everything",
          "author": null,
          "description": "<p><strong><a href=\"https://github.com/simonw/shot-scraper/releases/tag/1.8\">shot-scraper 1.8</a></strong></p>\nI've added a new feature to <a href=\"https://shot-scraper.datasette.io/\">shot-scraper</a> that makes it easier to share scripts for other people to use with the <a href=\"\">shot-scraper javascript</a> command.</p>\n<p><code>shot-scraper javascript</code> lets you load up a web page in an invisible Chrome browser (via Playwright), execute some JavaScript against that page and output the results to your terminal. It's a fun way of running complex screen-scraping routines as part of a terminal session, or even chained together with other commands using pipes.</p>\n<p>The <code>-i/--input</code> option lets you load that JavaScript from a file on disk - but now you can also use a <code>gh:</code> prefix to specify loading code from GitHub instead.</p>\n<p>To quote <a href=\"https://github.com/simonw/shot-scraper/releases/tag/1.8\">the release notes</a>:</p>\n<blockquote>\n<p><code>shot-scraper javascript</code> can now optionally <a href=\"https://shot-scraper.datasette.io/en/stable/javascript.html#running-javascript-from-github\">load scripts hosted on GitHub</a> via the new <code>gh:</code> prefix to the <code>shot-scraper javascript -i/--input</code> option. <a href=\"https://github.com/simonw/shot-scraper/issues/173\">#173</a></p>\n<p>Scripts can be referenced as <code>gh:username/repo/path/to/script.js</code> or, if the GitHub user has created a dedicated <code>shot-scraper-scripts</code> repository and placed scripts in the root of it, using <code>gh:username/name-of-script</code>.</p>\n<p>For example, to run this <a href=\"https://github.com/simonw/shot-scraper-scripts/blob/main/readability.js\">readability.js</a> script against any web page you can use the following:</p>\n<pre><code>shot-scraper javascript --input gh:simonw/readability \\\n  https://simonwillison.net/2025/Mar/24/qwen25-vl-32b/\n</code></pre>\n</blockquote>\n<p>The <a href=\"https://gist.github.com/simonw/60e196ec39a5a75dcabfd75fbe911a4c\">output from that example</a> starts like this:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n    <span class=\"pl-ent\">\"title\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Qwen2.5-VL-32B: Smarter and Lighter<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"byline\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Simon Willison<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"dir\"</span>: <span class=\"pl-c1\">null</span>,\n    <span class=\"pl-ent\">\"lang\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>en-gb<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"content\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;div id=<span class=\"pl-cce\">\\\"</span>readability-page-1<span class=\"pl-cce\">\\\"...</span></pre></div>\n\n<p>My <a href=\"https://github.com/simonw/shot-scraper-scripts\">simonw/shot-scraper-scripts</a> repo only has that one file in it so far, but I'm looking forward to growing that collection and hopefully seeing other people create and share their own <code>shot-scraper-scripts</code> repos as well.</p>\n<p>This feature is an imitation of <a href=\"https://github.com/simonw/llm/issues/809\">a similar feature</a> that's coming in the next release of LLM.\n\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/playwright\">playwright</a>, <a href=\"https://simonwillison.net/tags/shot-scraper\">shot-scraper</a>, <a href=\"https://simonwillison.net/tags/scraping\">scraping</a>, <a href=\"https://simonwillison.net/tags/javascript\">javascript</a>, <a href=\"https://simonwillison.net/tags/projects\">projects</a>, <a href=\"https://simonwillison.net/tags/github\">github</a>, <a href=\"https://simonwillison.net/tags/annotated-release-notes\">annotated-release-notes</a></p>",
          "link": "https://simonwillison.net/2025/Mar/25/shot-scraper/#atom-everything",
          "publishedOn": "2025-03-25T01:59:38.000Z",
          "wordCount": 451,
          "title": "shot-scraper 1.8",
          "imageUrl": null
        },
        {
          "id": "https://simonwillison.net/2025/Mar/25/playwright-mcp/#atom-everything",
          "author": null,
          "description": "<p><strong><a href=\"https://github.com/microsoft/playwright-mcp\">microsoft/playwright-mcp</a></strong></p>\nThe Playwright team at Microsoft have released an MCP (<a href=\"https://github.com/microsoft/playwright-mcp\">Model Context Protocol</a>) server wrapping Playwright, and it's pretty fascinating.</p>\n<p>They implemented it on top of the Chrome accessibility tree, so MCP clients (such as the Claude Desktop app) can use it to drive an automated browser and use the accessibility tree to read and navigate pages that they visit.</p>\n<p>Trying it out is quite easy if you have Claude Desktop and Node.js installed already. Edit your <code>claude_desktop_config.json</code> file:</p>\n<pre><code>code ~/Library/Application\\ Support/Claude/claude_desktop_config.json\n</code></pre>\n<p>And add this:</p>\n<div class=\"highlight highlight-source-json\"><pre>{\n  <span class=\"pl-ent\">\"mcpServers\"</span>: {\n    <span class=\"pl-ent\">\"playwright\"</span>: {\n      <span class=\"pl-ent\">\"command\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>npx<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-ent\">\"args\"</span>: [\n        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@playwright/mcp@latest<span class=\"pl-pds\">\"</span></span>\n      ]\n    }\n  }\n}</pre></div>\n\n<p>Now when you launch Claude Desktop various new browser automation tools will be available to it, and you can tell Claude to navigate to a website and interact with it.</p>\n<p><img alt=\"Screenshot of Claude interface showing a conversation about Datasette. The interface shows Claude responding to a user (SW) after navigating to datasette.io. Claude's response includes page details (URL: https://datasette.io/, Title: Datasette: An open source multi-tool for exploring and publishing data) and a summary of what's visible on the site: a description of Datasette as an open-source tool for exploring and publishing data, the tagline &quot;Find stories in data&quot;, navigation options, and features including exploratory data analysis, instant data publishing, and rapid prototyping.\" src=\"https://static.simonwillison.net/static/2025/claude-playwright.jpg\" /></p>\n<p>I ran the following to get a list of the available tools:</p>\n<pre><code>cd /tmp\ngit clone https://github.com/microsoft/playwright-mcp\ncd playwright-mcp/src/tools\nfiles-to-prompt . | llm -m claude-3.7-sonnet \\\n  'Output a detailed description of these tools'\n</code></pre>\n<p>The <a href=\"https://gist.github.com/simonw/69200999149221c549c1f62e7befa20f\">full output is here</a>, but here's the truncated tool list:</p>\n<blockquote>\n<h4>Navigation Tools (<code>common.ts</code>)</h4>\n<ul>\n<li><strong>browser_navigate</strong>: Navigate to a specific URL</li>\n<li><strong>browser_go_back</strong>: Navigate back in browser history</li>\n<li><strong>browser_go_forward</strong>: Navigate forward in browser history</li>\n<li><strong>browser_wait</strong>: Wait for a specified time in seconds</li>\n<li><strong>browser_press_key</strong>: Press a keyboard key</li>\n<li><strong>browser_save_as_pdf</strong>: Save current page as PDF</li>\n<li><strong>browser_close</strong>: Close the current page</li>\n</ul>\n<h4>Screenshot and Mouse Tools (<code>screenshot.ts</code>)</h4>\n<ul>\n<li><strong>browser_screenshot</strong>: Take a screenshot of the current page</li>\n<li><strong>browser_move_mouse</strong>: Move mouse to specific coordinates</li>\n<li><strong>browser_click</strong> (coordinate-based): Click at specific x,y coordinates</li>\n<li><strong>browser_drag</strong> (coordinate-based): Drag mouse from one position to another</li>\n<li><strong>browser_type</strong> (keyboard): Type text and optionally submit</li>\n</ul>\n<h4>Accessibility Snapshot Tools (<code>snapshot.ts</code>)</h4>\n<ul>\n<li><strong>browser_snapshot</strong>: Capture accessibility structure of the page</li>\n<li><strong>browser_click</strong> (element-based): Click on a specific element using accessibility reference</li>\n<li><strong>browser_drag</strong> (element-based): Drag between two elements</li>\n<li><strong>browser_hover</strong>: Hover over an element</li>\n<li><strong>browser_type</strong> (element-based): Type text into a specific element</li>\n</ul>\n</blockquote>\n\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/playwright\">playwright</a>, <a href=\"https://simonwillison.net/tags/anthropic\">anthropic</a>, <a href=\"https://simonwillison.net/tags/claude\">claude</a>, <a href=\"https://simonwillison.net/tags/generative-ai\">generative-ai</a>, <a href=\"https://simonwillison.net/tags/llm-tool-use\">llm-tool-use</a>, <a href=\"https://simonwillison.net/tags/ai\">ai</a>, <a href=\"https://simonwillison.net/tags/llms\">llms</a>, <a href=\"https://simonwillison.net/tags/model-context-protocol\">model-context-protocol</a></p>",
          "link": "https://simonwillison.net/2025/Mar/25/playwright-mcp/#atom-everything",
          "publishedOn": "2025-03-25T01:40:05.000Z",
          "wordCount": 492,
          "title": "microsoft/playwright-mcp",
          "imageUrl": null
        },
        {
          "id": "https://simonwillison.net/2025/Mar/24/qwen25-vl-32b/#atom-everything",
          "author": null,
          "description": "<p><strong><a href=\"https://qwenlm.github.io/blog/qwen2.5-vl-32b/\">Qwen2.5-VL-32B: Smarter and Lighter</a></strong></p>\nThe second big open weight LLM release from China today - the first being <a href=\"https://simonwillison.net/2025/Mar/24/deepseek/\">DeepSeek v3-0324</a>.</p>\n<p>Qwen's previous vision model was Qwen2.5 VL, <a href=\"https://simonwillison.net/2025/Jan/27/qwen25-vl-qwen25-vl-qwen25-vl/\">released in January</a> in 3B, 7B and 72B sizes.</p>\n<p>Today's Apache 2.0 licensed release is a 32B model, which is quickly becoming my personal favourite model size - large enough to have GPT-4-class capabilities, but small enough that on my 64GB Mac there's still enough RAM for me to run other memory-hungry applications like Firefox and VS Code.</p>\n<p>Qwen claim that the new model (when compared to their previous 2.5 VL family) can \"align more closely with human preferences\", is better at \"mathematical reasoning\" and provides \"enhanced accuracy and detailed analysis in tasks such as image parsing, content recognition, and visual logic deduction\".</p>\n<p>They also offer some presumably carefully selected benchmark results showing it out-performing Gemma 3-27B, Mistral Small 3.1 24B and GPT-4o-0513 (there have been two more recent GPT-4o releases since that one, 2024-08-16 and 2024-11-20).</p>\n<p>As usual, Prince Canuma had MLX versions of the models live within hours of the release, in <a href=\"https://huggingface.co/mlx-community/Qwen2.5-VL-32B-Instruct-4bit\">4 bit</a>, <a href=\"https://huggingface.co/mlx-community/Qwen2.5-VL-32B-Instruct-6bit\">6 bit</a>, <a href=\"https://huggingface.co/mlx-community/Qwen2.5-VL-32B-Instruct-8bit\">8 bit</a>, and <a href=\"https://huggingface.co/mlx-community/Qwen2.5-VL-32B-Instruct-bf16\">bf16</a> variants.</p>\n<p>I ran the 4bit version (a 18GB model download) using <code>uv</code> and Prince's <a href=\"https://github.com/Blaizzy/mlx-vlm\">mlx-vlm</a> like this:</p>\n<div class=\"highlight highlight-source-shell\"><pre>uv run --with <span class=\"pl-s\"><span class=\"pl-pds\">'</span>numpy&lt;2<span class=\"pl-pds\">'</span></span> --with mlx-vlm \\\n  python -m mlx_vlm.generate \\\n    --model mlx-community/Qwen2.5-VL-32B-Instruct-4bit \\\n    --max-tokens 1000 \\\n    --temperature 0.0 \\\n    --prompt <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Describe this image.<span class=\"pl-pds\">\"</span></span> \\\n    --image Mpaboundrycdfw-1.png</pre></div>\n\n<p>Here's the image:</p>\n<p><img alt=\"A map image, described below\" src=\"https://static.simonwillison.net/static/2025/Mpaboundrycdfw-1.png\" /></p>\n<p>And here's the resulting description, which I found to be <em>very</em> impressive:</p>\n<blockquote>\n<p>This image appears to be a map highlighting specific areas along the coastline, likely in California, based on the geographical features and place names. Here is a detailed description of the image:</p>\n<ol>\n<li>\n<p><strong>Geographic Features</strong>:</p>\n<ul>\n<li>The map shows a section of the coastline, with land on the right and the sea on the left.</li>\n<li>The land area includes parts of SanMateo County, as noted in the top-right corner.</li>\n<li>The coastline features several named locations, including:\n<ul>\n<li><strong>Point Montara</strong></li>\n<li><strong>Pillar Point</strong></li>\n<li><strong>Kings Rock</strong></li>\n<li><strong>VicenteCreek</strong></li>\n<li><strong>DennistonCreek</strong></li>\n<li><strong>State Beach</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Highlighted Areas</strong>:</p>\n<ul>\n<li>The map contains two distinct areas marked with different colors:\n<ul>\n<li>\n<strong>Red Area (Top Section)</strong>\n<ul>\n<li>Labeled as \"MONTARA\" and \"MONTARA M R\" (possibly referring to a \"Marine Reserves\" or similar protected area).</li>\n<li>This area is marked with a dark red color and extends from the coastline inland.</li>\n</ul>\n</li>\n<li>\n<strong>Blue Area (Bottom Section)</strong>\n<ul>\n<li>Labeled as \"PILLAR\" and \"PILLAR P O I N T\" along with \"SMCA\" (Special Management Area).</li>\n<li>This area is marked with a blue color and is located closer to the coastline, including the area around \"Pillar Point.\"</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Depth Contours</strong>:</p>\n<ul>\n<li>The map includes depth markings in the sea, indicating the bathymetrical features:\n<ul>\n<li>\n<strong>20 fathom (fm) line</strong> is marked in the upper-left part of the sea.</li>\n<li>\n<strong>10 fathom (fm) line</strong> is marked closer to the coastline.</li>\n<li>\n<strong>30 fathom (fm) line</strong> is marked further out to sea.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Other Features</strong>:</p>\n<ul>\n<li>\n<strong>State Beach</strong>: Marked near the top-right, indicating a protected recreational area.</li>\n<li>\n<strong>Kings Rock</strong>: A prominent feature near the coastline, likely a rocky outcropping.</li>\n<li>\n<strong>Creeks</strong>: The map shows several creeks, including <strong>VicenteCreek</strong> and <strong>DennistonCreek</strong>, which flow into the sea.</li>\n</ul>\n</li>\n<li>\n<p><strong>Protected Areas</strong>:</p>\n<ul>\n<li>The map highlights specific protected areas:\n<ul>\n<li>\n<strong>Marine Reserves</strong>:\n<ul>\n<li>\"MONTARA M R\" (Marine Reserves) in red.</li>\n</ul>\n</li>\n<li>\n<strong>Special Management Area (SMCA)</strong>\n<ul>\n<li>\"PILLAR P O I N T\" in blue, indicating a Special Management Area.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Grid and Coordinates</strong>:</p>\n<ul>\n<li>The map includes a grid with latitude and longitude markings:\n<ul>\n<li>Latitude ranges from approximately 37°25'N to 37°35'N.</li>\n<li>Longitude ranges from approximately 122°22.5'W to 122°35.5'W.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Topography</strong>:</p>\n<ul>\n<li>The land area shows topographic features, including elevations and vegetation, with green areas indicating higher elevations or vegetated land.</li>\n</ul>\n</li>\n<li>\n<p><strong>Other Labels</strong>:</p>\n<ul>\n<li>\n<strong>\"SMR\"</strong>: Likely stands for \"State Managed Reserves.\"</li>\n<li>\n<strong>\"SMCA\"</strong>: Likely stands for \"Special Management Control Area.\"</li>\n</ul>\n</li>\n</ol>\n<p>In summary, this map highlights specific protected areas along the coastline, including a red \"Marine Reserves\" area and a blue \"Special Management Area\" near \"Pillar Point.\" The map also includes depth markings, geographical features, and place names, providing a detailed view of the region's natural and protected areas.</p>\n</blockquote>\n\n<p>It included the following runtime statistics:</p>\n<pre><code>Prompt: 1051 tokens, 111.985 tokens-per-sec\nGeneration: 760 tokens, 17.328 tokens-per-sec\nPeak memory: 21.110 GB\n</code></pre>\n\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/vision-llms\">vision-llms</a>, <a href=\"https://simonwillison.net/tags/llm-release\">llm-release</a>, <a href=\"https://simonwillison.net/tags/generative-ai\">generative-ai</a>, <a href=\"https://simonwillison.net/tags/ai\">ai</a>, <a href=\"https://simonwillison.net/tags/qwen\">qwen</a>, <a href=\"https://simonwillison.net/tags/llms\">llms</a>, <a href=\"https://simonwillison.net/tags/uv\">uv</a>, <a href=\"https://simonwillison.net/tags/mlx\">mlx</a>, <a href=\"https://simonwillison.net/tags/prince-canuma\">prince-canuma</a></p>",
          "link": "https://simonwillison.net/2025/Mar/24/qwen25-vl-32b/#atom-everything",
          "publishedOn": "2025-03-24T22:43:22.000Z",
          "wordCount": 871,
          "title": "Qwen2.5-VL-32B: Smarter and Lighter",
          "imageUrl": null
        },
        {
          "id": "https://simonwillison.net/2025/Mar/24/deepseek/#atom-everything",
          "author": null,
          "description": "<p><strong><a href=\"https://huggingface.co/deepseek-ai/DeepSeek-V3-0324\">deepseek-ai/DeepSeek-V3-0324</a></strong></p>\nChinese AI lab DeepSeek just released the latest version of their enormous DeepSeek v3 model, baking the release date into the name <code>DeepSeek-V3-0324</code>.</p>\n<p>The license is MIT (that's new - previous DeepSeek v3 had a custom license), the README is empty and the release adds up a to a total of 641 GB of files, mostly of the form <code>model-00035-of-000163.safetensors</code>.</p>\n<p>The model only came out a few hours ago and MLX developer Awni Hannun already <a href=\"https://twitter.com/awnihannun/status/1904177084609827054\">has it running</a> at &gt;20 tokens/second on a 512GB M3 Ultra Mac Studio ($9,499 of ostensibly consumer-grade hardware) via <a href=\"https://pypi.org/project/mlx-lm/\">mlx-lm</a> and this <a href=\"https://huggingface.co/mlx-community/DeepSeek-V3-0324-4bit\">mlx-community/DeepSeek-V3-0324-4bit</a> 4bit quantization, which reduces the on-disk size to 352 GB.</p>\n<p>I think that means if you have that machine you can run it with my <a href=\"https://github.com/simonw/llm-mlx\">llm-mlx</a> plugin like this, but I've not tried myself!</p>\n<pre><code>llm mlx download-model mlx-community/DeepSeek-V3-0324-4bit\nllm chat -m mlx-community/DeepSeek-V3-0324-4bit\n</code></pre>\n<p>The new model is also <a href=\"https://openrouter.ai/deepseek/deepseek-chat-v3-0324:free\">listed on OpenRouter</a>. You can try a chat at <a href=\"https://openrouter.ai/chat?models=deepseek/deepseek-chat-v3-0324:free\">openrouter.ai/chat?models=deepseek/deepseek-chat-v3-0324:free</a>.</p>\n<p>Here's what the chat interface <a href=\"https://gist.github.com/simonw/3ce2bf5836743dfaf07d994578b261ba\">gave me</a> for \"Generate an SVG of a pelican riding a bicycle\":</p>\n<p><img alt=\"There's a pelican, and a bicycle, but both of them look disassembled.\" src=\"https://static.simonwillison.net/static/2025/deepseek-v3-pelican.jpg\" /></p>\n<p>I have two API keys with OpenRouter - one of them worked with the model, the other gave me a <code>No endpoints found matching your data policy</code> error - I think because I had a setting on that key disallowing models from training on my activity. The key that worked was a free key with no attached billing credentials.</p>\n<p>For my working API key the <a href=\"https://github.com/simonw/llm-openrouter\">llm-openrouter</a> plugin let me run a prompt like this:</p>\n<pre><code>llm install llm-openrouter\nllm keys set openrouter\n# Paste key here\nllm -m openrouter/deepseek/deepseek-chat-v3-0324:free \"best fact about a pelican\"\n</code></pre>\n<p>Here's that \"best fact\" - the terminal output included Markdown and an emoji combo, here that's rendered.</p>\n<blockquote>\n<p>One of the most fascinating facts about pelicans is their <strong>unique throat pouch</strong>, called a <strong>gular sac</strong>, which can hold up to <strong>3 gallons (11 liters) of water</strong>—three times more than their stomach!  </p>\n<p>Here’s why it’s amazing:<br />\n- <strong>Fishing Tool</strong>: They use it like a net to scoop up fish, then drain the water before swallowing.<br />\n- <strong>Cooling Mechanism</strong>: On hot days, pelicans flutter the pouch to stay cool by evaporating water.<br />\n- <strong>Built-in \"Shopping Cart\"</strong>: Some species even use it to carry food back to their chicks.  </p>\n<p>Bonus fact: Pelicans often <strong>fish cooperatively</strong>, herding fish into shallow water for an easy catch.  </p>\n<p>Would you like more cool pelican facts? 🐦🌊</p>\n</blockquote>\n<p>In putting this post together I <a href=\"https://claude.ai/share/fc65bf9b-ae2d-4b23-bd09-ed0d54ff4b56\">got Claude</a> to build me <a href=\"https://tools.simonwillison.net/huggingface-storage\">this new tool</a> for finding the total on-disk size of a Hugging Face repository, which is available in their API but not currently displayed on their website.</p>\n<p><strong>Update</strong>: Here's a notable independent benchmark <a href=\"https://twitter.com/paulgauthier/status/1904304052500148423\">from Paul Gauthier</a>:</p>\n<blockquote>\n<p>DeepSeek's new V3 scored 55% on aider's <a href=\"https://aider.chat/docs/leaderboards/\">polyglot benchmark</a>, significantly improving over the prior version. It's the #2 non-thinking/reasoning model, behind only Sonnet 3.7. V3 is competitive with thinking models like R1 &amp; o3-mini.</p>\n</blockquote>\n\n\n    <p>Tags: <a href=\"https://simonwillison.net/tags/llm-release\">llm-release</a>, <a href=\"https://simonwillison.net/tags/hugging-face\">hugging-face</a>, <a href=\"https://simonwillison.net/tags/generative-ai\">generative-ai</a>, <a href=\"https://simonwillison.net/tags/deepseek\">deepseek</a>, <a href=\"https://simonwillison.net/tags/ai\">ai</a>, <a href=\"https://simonwillison.net/tags/llms\">llms</a>, <a href=\"https://simonwillison.net/tags/mlx\">mlx</a>, <a href=\"https://simonwillison.net/tags/llm\">llm</a>, <a href=\"https://simonwillison.net/tags/ai-assisted-programming\">ai-assisted-programming</a>, <a href=\"https://simonwillison.net/tags/tools\">tools</a>, <a href=\"https://simonwillison.net/tags/pelican-riding-a-bicycle\">pelican-riding-a-bicycle</a></p>",
          "link": "https://simonwillison.net/2025/Mar/24/deepseek/#atom-everything",
          "publishedOn": "2025-03-24T15:04:04.000Z",
          "wordCount": 673,
          "title": "deepseek-ai/DeepSeek-V3-0324",
          "imageUrl": "https://static.simonwillison.net/static/2025/deepseek-v3-pelican.jpg"
        }
      ]
    },
    {
      "title": "MIT News - Artificial intelligence",
      "feedUrl": "https://news.mit.edu/rss/topic/artificial-intelligence2",
      "siteUrl": "https://news.mit.edu/rss/topic/artificial-intelligence2",
      "articles": [
        {
          "id": "https://news.mit.edu/2025/mit-open-learning-resources-life-changing-journey-0330",
          "author": "Lauren Rebecca Thacker | MIT Open Learning",
          "description": "Ana Trišović, who studies the democratization of AI, reflects on a career path that she began as a student downloading free MIT resources in Serbia.",
          "link": "https://news.mit.edu/2025/mit-open-learning-resources-life-changing-journey-0330",
          "publishedOn": "2025-03-30T04:00:00.000Z",
          "wordCount": 1332,
          "title": "For this computer scientist, MIT Open Learning was the start of a life-changing journey",
          "imageUrl": "https://news.mit.edu/sites/default/files/images/202503/MIT-Ana-Trisovic.jpg"
        },
        {
          "id": "https://news.mit.edu/2025/edufi-makes-higher-education-more-accessible-students-pakistan-0327",
          "author": "Zach Winn | MIT News",
          "description": "EduFi, founded by an MIT alumna, provides low-interest student loans to families in Pakistan so more can attend college.",
          "link": "https://news.mit.edu/2025/edufi-makes-higher-education-more-accessible-students-pakistan-0327",
          "publishedOn": "2025-03-27T18:30:00.000Z",
          "wordCount": 1863,
          "title": "Making higher education more accessible to students in Pakistan",
          "imageUrl": "https://news.mit.edu/sites/default/files/images/202503/MIT-EduFi-01-press.jpg"
        },
        {
          "id": "https://news.mit.edu/2025/mit-maritime-consortium-sets-sail-0326",
          "author": "Anne Wilson | Department of Mechanical Engineering",
          "description": "A new international collaboration unites MIT and maritime industry leaders to develop nuclear propulsion technologies, alternative fuels, data-powered strategies for operation, and more.",
          "link": "https://news.mit.edu/2025/mit-maritime-consortium-sets-sail-0326",
          "publishedOn": "2025-03-26T12:55:00.000Z",
          "wordCount": 1586,
          "title": "MIT Maritime Consortium sets sail",
          "imageUrl": "https://news.mit.edu/sites/default/files/images/202503/mit-MARITIME-CONSORTIUM.jpg"
        }
      ]
    }
  ],
  "cliVersion": "1.15.1"
}